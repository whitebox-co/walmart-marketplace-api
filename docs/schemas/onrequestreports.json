{
  "openapi": "3.0.1",
  "info": {
    "title": "On-request Report Management",
    "description": "The On-request Reports API allows you to request reports immediately about your items for faster retrieval. You can request the report, check status on the report availability, and then download the report URL when report is ready. You can also get a list of all reports requested."
  },
  "servers": [
    {
      "url": "https://marketplace.walmartapis.com",
      "description": "Production URL"
    },
    {
      "url": "https://sandbox.walmartapis.com",
      "description": "Sandbox URL"
    }
  ],
  "security": [
    {
      "basicScheme": []
    }
  ],
  "paths": {
    "/v3/reports/reportRequests": {
      "get": {
        "tags": [
          "On-Request Report"
        ],
        "summary": "Get All Report Requests",
        "description": "Fetches a list of all report requests for specified search criteria by using query parameters.\n\nYou can fetch details of report requests created in the last 30 days only.",
        "operationId": "getRequestsStatus",
        "parameters": [
          {
            "name": "reportType",
            "in": "query",
            "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ITEM",
                "INVENTORY"
              ]
            }
          },
          {
            "name": "reportVersion",
            "in": "query",
            "description": "Version of report for which the request is created. Example, v1.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestStatus",
            "in": "query",
            "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "RECEIVED",
                "INPROGRESS",
                "READY",
                "ERROR"
              ]
            }
          },
          {
            "name": "requestSubmissionStartDate",
            "in": "query",
            "description": "Report request submittal start date for range of reports requested, in format: YYYY-MM-DDTHH:mm:ssZ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestSubmissionEndDate",
            "in": "query",
            "description": "Report request submittal end date for range of reports requested, in format YYYY-MM-DDTHH:mm:ssZ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Only supported Media Type : application/json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Current page",
                      "format": "int32"
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "Number of records fetched.",
                      "format": "int64"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Number of records to be returned. Default is 10.",
                      "format": "int32"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "Used for pagination when more than specified limit (or default 10) records are found. Use this param for next API call. Just have to use this value as query param. Need to pass only the cursor value and not the initial API call query params. For e.g. if ['nextCursor'='reportType=ITEM&requestStatus=ERROR&requestSubmissionStartDate=2021-08-20T10:52:59Z&requestSubmissionEndDate=2021-09-14T10:52:59Z&page=2&limit=1'] then subsequent call to will be [marketplace.walmartapis.com/v3/reports/reportRequests?reportType=ITEM&requestStatus=ERROR&requestSubmissionStartDate=2021-08-20T10:52:59Z&requestSubmissionEndDate=2021-09-14T10:52:59Z&page=2&limit=1]. Just have to use nextCursor value instead of query params"
                    },
                    "requests": {
                      "type": "array",
                      "description": "List of requests",
                      "items": {
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "type": "string",
                            "description": "Automated ID generated by system that uniquely identifies the report request.",
                            "format": "uuid"
                          },
                          "requestStatus": {
                            "type": "string",
                            "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
                            "enum": [
                              "RECEIVED",
                              "INPROGRESS",
                              "READY",
                              "ERROR"
                            ]
                          },
                          "requestSubmissionDate": {
                            "type": "string",
                            "description": "Date and time on which the report request is submitted."
                          },
                          "reportType": {
                            "type": "string",
                            "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
                            "enum": [
                              "ITEM"
                            ]
                          },
                          "reportVersion": {
                            "type": "string",
                            "description": "Version of report for which the request is created. Example, v1."
                          },
                          "payload": {
                            "type": "object",
                            "properties": {
                              "rowFilters": {
                                "type": "array",
                                "description": "Row Level filters",
                                "items": {
                                  "type": "object",
                                  "description": "Supertype of all row filters.",
                                  "anyOf": [
                                    {
                                      "title": "EnumFilter",
                                      "required": [
                                        "columnName",
                                        "type"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "values": {
                                          "type": "array",
                                          "description": "Enum filter values which has to be included in report",
                                          "items": {
                                            "type": "string",
                                            "description": "Enum filter values which has to be included in report"
                                          }
                                        },
                                        "columnName": {
                                          "type": "string",
                                          "description": "Column on which filter has to be applied"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Type of the filter",
                                          "enum": [
                                            "rangeFilter",
                                            "enumFilter"
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "title": "RangeFilter",
                                      "required": [
                                        "columnName",
                                        "rowFilterType"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "from": {
                                          "type": "string",
                                          "description": "Filter range start"
                                        },
                                        "to": {
                                          "type": "string",
                                          "description": "Filter range end"
                                        },
                                        "rowFilterType": {
                                          "type": "string",
                                          "description": "Type of the filter",
                                          "enum": [
                                            "rangeFilter",
                                            "enumFilter"
                                          ]
                                        },
                                        "columnName": {
                                          "type": "string",
                                          "description": "Column on which filter has to be applied"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "excludeColumns": {
                                "type": "array",
                                "description": "Columns to exclude from report",
                                "items": {
                                  "type": "string",
                                  "description": "Columns to exclude from report"
                                }
                              }
                            },
                            "description": "Request Payload"
                          },
                          "reportGenerationDate": {
                            "type": "string",
                            "description": "Date and time on which the report is generated. Attribute is available only if report is generated."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "page": 1,
                  "totalCount": 15,
                  "limit": 2,
                  "nextCursor": "reportType=ITEM&page=2&limit=2",
                  "requests": [
                    {
                      "requestId": "98884f2c-46c7-48c6-8e19-0946ff371442",
                      "requestStatus": "RECEIVED",
                      "requestSubmissionDate": "2020-09-28T09:14:19",
                      "reportType": "ITEM",
                      "reportVersion": "v1"
                    },
                    {
                      "requestId": "343bb2ab-63c6-4824-b07f-d97e5a7a4147",
                      "requestStatus": "RECEIVED",
                      "requestSubmissionDate": "2020-09-28T04:02:52",
                      "reportType": "ITEM",
                      "reportVersion": "v1",
                      "payload": {
                        "rowFilters": [
                          {
                            "type": "rangeFilter",
                            "columnName": "Offer Start Date",
                            "from": "2020-03-16"
                          },
                          {
                            "type": "rangeFilter",
                            "columnName": "Offer End Date",
                            "to": "2021-06-16"
                          },
                          {
                            "type": "rangeFilter",
                            "columnName": "Price",
                            "from": "10",
                            "to": "100"
                          },
                          {
                            "type": "enumFilter",
                            "columnName": "Publish Status",
                            "values": [
                              "PUBLISHED",
                              "RETIRED"
                            ]
                          }
                        ],
                        "excludeColumns": [
                          "Average Rating",
                          "Shelf Name"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "On-Request Report"
        ],
        "summary": "Create Report Request",
        "description": "Creates a new request for report by specifying the reportType and reportVersion.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-onrequestreports/#4180"
        },
        "operationId": "generateReport",
        "parameters": [
          {
            "name": "reportType",
            "in": "query",
            "description": "Specifies the report type for the request. For example, reportType=ITEM creates an Item Report.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ITEM",
                "INVENTORY"
              ]
            }
          },
          {
            "name": "reportVersion",
            "in": "query",
            "description": "Version of report for which the request is created. Supported versions for each report type are currently 'reportVersion=v1' for the following reportType(s): INVENTORY and 'reportVersion=v1', 'reportVersion=v2' for the following reportType(s): ITEM.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Only supported Media Type : application/json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Only supported Media Type : application/json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "requestBody": {
          "description": "Request body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rowFilters": {
                    "type": "array",
                    "description": "Row Level filters",
                    "items": {
                      "type": "object",
                      "description": "Supertype of all row filters.",
                      "anyOf": [
                        {
                          "title": "EnumFilter",
                          "required": [
                            "columnName",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "array",
                              "description": "Enum filter values which has to be included in report",
                              "items": {
                                "type": "string",
                                "description": "Enum filter values which has to be included in report"
                              }
                            },
                            "columnName": {
                              "type": "string",
                              "description": "Column on which filter has to be applied"
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the filter",
                              "enum": [
                                "rangeFilter",
                                "enumFilter"
                              ]
                            }
                          }
                        },
                        {
                          "title": "RangeFilter",
                          "required": [
                            "columnName",
                            "rowFilterType"
                          ],
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string",
                              "description": "Filter range start"
                            },
                            "to": {
                              "type": "string",
                              "description": "Filter range end"
                            },
                            "rowFilterType": {
                              "type": "string",
                              "description": "Type of the filter",
                              "enum": [
                                "rangeFilter",
                                "enumFilter"
                              ]
                            },
                            "columnName": {
                              "type": "string",
                              "description": "Column on which filter has to be applied"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "excludeColumns": {
                    "type": "array",
                    "description": "Columns to exclude from report",
                    "items": {
                      "type": "string",
                      "description": "Columns to exclude from report"
                    }
                  }
                },
                "description": "Request Payload"
              },
              "example": {
                "rowFilters": [
                  {
                    "type": "rangeFilter",
                    "columnName": "Offer Start Date",
                    "from": "2020-03-16"
                  },
                  {
                    "type": "rangeFilter",
                    "columnName": "Offer End Date",
                    "to": "2021-06-16"
                  },
                  {
                    "type": "rangeFilter",
                    "columnName": "Price",
                    "from": "10",
                    "to": "100"
                  },
                  {
                    "type": "enumFilter",
                    "columnName": "Publish Status",
                    "values": [
                      "PUBLISHED",
                      "RETIRED"
                    ]
                  }
                ],
                "excludeColumns": [
                  "Average Rating",
                  "Shelf Name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "description": "Automated ID generated by system that uniquely identifies the report request.",
                      "format": "uuid"
                    },
                    "requestStatus": {
                      "type": "string",
                      "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
                      "enum": [
                        "RECEIVED",
                        "INPROGRESS",
                        "READY",
                        "ERROR"
                      ]
                    },
                    "requestSubmissionDate": {
                      "type": "string",
                      "description": "Date and time on which the report request is submitted."
                    },
                    "reportType": {
                      "type": "string",
                      "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
                      "enum": [
                        "ITEM"
                      ]
                    },
                    "reportVersion": {
                      "type": "string",
                      "description": "Version of report for which the request is created. Example, v1."
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "rowFilters": {
                          "type": "array",
                          "description": "Row Level filters",
                          "items": {
                            "type": "object",
                            "description": "Supertype of all row filters.",
                            "anyOf": [
                              {
                                "title": "EnumFilter",
                                "required": [
                                  "columnName",
                                  "type"
                                ],
                                "type": "object",
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "description": "Enum filter values which has to be included in report",
                                    "items": {
                                      "type": "string",
                                      "description": "Enum filter values which has to be included in report"
                                    }
                                  },
                                  "columnName": {
                                    "type": "string",
                                    "description": "Column on which filter has to be applied"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of the filter",
                                    "enum": [
                                      "rangeFilter",
                                      "enumFilter"
                                    ]
                                  }
                                }
                              },
                              {
                                "title": "RangeFilter",
                                "required": [
                                  "columnName",
                                  "rowFilterType"
                                ],
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "description": "Filter range start"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "Filter range end"
                                  },
                                  "rowFilterType": {
                                    "type": "string",
                                    "description": "Type of the filter",
                                    "enum": [
                                      "rangeFilter",
                                      "enumFilter"
                                    ]
                                  },
                                  "columnName": {
                                    "type": "string",
                                    "description": "Column on which filter has to be applied"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "excludeColumns": {
                          "type": "array",
                          "description": "Columns to exclude from report",
                          "items": {
                            "type": "string",
                            "description": "Columns to exclude from report"
                          }
                        }
                      },
                      "description": "Request Payload"
                    }
                  }
                },
                "example": {
                  "requestId": "98884f2c-46c7-48c6-8e19-0946ff371442",
                  "requestStatus": "RECEIVED",
                  "requestSubmissionDate": "2020-09-28T09:14:19",
                  "reportType": "ITEM",
                  "reportVersion": "v1",
                  "payload": {
                    "rowFilters": [
                      {
                        "type": "rangeFilter",
                        "columnName": "Offer Start Date",
                        "from": "2020-03-16"
                      },
                      {
                        "type": "rangeFilter",
                        "columnName": "Offer End Date",
                        "to": "2021-06-16"
                      },
                      {
                        "type": "rangeFilter",
                        "columnName": "Price",
                        "from": "10",
                        "to": "100"
                      },
                      {
                        "type": "enumFilter",
                        "columnName": "Publish Status",
                        "values": [
                          "PUBLISHED",
                          "RETIRED"
                        ]
                      }
                    ],
                    "excludeColumns": [
                      "Average Rating",
                      "Shelf Name"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/reports/downloadReport": {
      "get": {
        "tags": [
          "On-Request Report"
        ],
        "summary": "Download Report URL",
        "description": "Fetches URL to download a generated report.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-onrequestreports/#4180"
        },
        "operationId": "downloadReport",
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Automated ID generated by system that uniquely identifies the report request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Only supported Media Type : application/json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "downloadURL": {
                      "type": "string",
                      "description": "URL to be used to download the report."
                    },
                    "downloadURLExpirationTime": {
                      "type": "string",
                      "description": "Time till when the URL to download the report will be valid."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Automated ID generated by system that uniquely identifies the report request.",
                      "format": "uuid"
                    },
                    "requestStatus": {
                      "type": "string",
                      "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
                      "enum": [
                        "RECEIVED",
                        "INPROGRESS",
                        "READY",
                        "ERROR"
                      ]
                    },
                    "requestSubmissionDate": {
                      "type": "string",
                      "description": "Date and time on which the report request is submitted."
                    },
                    "reportType": {
                      "type": "string",
                      "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
                      "enum": [
                        "ITEM"
                      ]
                    },
                    "reportVersion": {
                      "type": "string",
                      "description": "Version of report for which the request is created. Example, v1."
                    },
                    "reportGenerationDate": {
                      "type": "string",
                      "description": "Date and time on which the report is generated. Attribute is available only if report is generated."
                    }
                  }
                },
                "example": {
                  "requestSubmissionDate": "2020-09-24T05:36:24",
                  "reportType": "ITEM",
                  "requestStatus": "RECEIVED",
                  "reportVersion": "v1",
                  "reportGenerationDate": "2020-09-24T05:44:28",
                  "downloadURL": "https://marketplace.walmartapis.com/v3/reports/getReport/item-report/ItemReport_10000001882_2021-02-05T112248.020000.zip?sv=2018-11-09&spr=https&st=2021-02-08T05%3A56%3A41Z&se=2021-02-08T06%3A11%3A41Z&sr=b&sp=r&sig=8OL2BCaOLLrykNtRy0GgbkMcvk%2F6SwDkEg1rq2lTGi0%3D",
                  "downloadURLExpirationTime": "2020-09-27T17:03:41",
                  "requestId": "a56cb080-8cad-4789-8f4d-231c7c3e7a83"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reports/reportRequests/{requestId}": {
      "get": {
        "tags": [
          "On-Request Report"
        ],
        "summary": "Report Request Status",
        "description": "Fetches status and other details of a report request by providing a requestID.\n\nYou can fetch details of report request created in the last 30 days only.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-onrequestreports/#4180"
        },
        "operationId": "getSingleRequestStatus",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Automated ID generated by system that uniquely identifies the report request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Only supported Media Type : application/json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "description": "Automated ID generated by system that uniquely identifies the report request.",
                      "format": "uuid"
                    },
                    "requestStatus": {
                      "type": "string",
                      "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
                      "enum": [
                        "RECEIVED",
                        "INPROGRESS",
                        "READY",
                        "ERROR"
                      ]
                    },
                    "requestSubmissionDate": {
                      "type": "string",
                      "description": "Date and time on which the report request is submitted."
                    },
                    "reportType": {
                      "type": "string",
                      "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
                      "enum": [
                        "ITEM"
                      ]
                    },
                    "reportVersion": {
                      "type": "string",
                      "description": "Version of report for which the request is created. Example, v1."
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "rowFilters": {
                          "type": "array",
                          "description": "Row Level filters",
                          "items": {
                            "type": "object",
                            "description": "Supertype of all row filters.",
                            "anyOf": [
                              {
                                "title": "EnumFilter",
                                "required": [
                                  "columnName",
                                  "type"
                                ],
                                "type": "object",
                                "properties": {
                                  "values": {
                                    "type": "array",
                                    "description": "Enum filter values which has to be included in report",
                                    "items": {
                                      "type": "string",
                                      "description": "Enum filter values which has to be included in report"
                                    }
                                  },
                                  "columnName": {
                                    "type": "string",
                                    "description": "Column on which filter has to be applied"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of the filter",
                                    "enum": [
                                      "rangeFilter",
                                      "enumFilter"
                                    ]
                                  }
                                }
                              },
                              {
                                "title": "RangeFilter",
                                "required": [
                                  "columnName",
                                  "rowFilterType"
                                ],
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "description": "Filter range start"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "Filter range end"
                                  },
                                  "rowFilterType": {
                                    "type": "string",
                                    "description": "Type of the filter",
                                    "enum": [
                                      "rangeFilter",
                                      "enumFilter"
                                    ]
                                  },
                                  "columnName": {
                                    "type": "string",
                                    "description": "Column on which filter has to be applied"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "excludeColumns": {
                          "type": "array",
                          "description": "Columns to exclude from report",
                          "items": {
                            "type": "string",
                            "description": "Columns to exclude from report"
                          }
                        }
                      },
                      "description": "Request Payload"
                    },
                    "reportGenerationDate": {
                      "type": "string",
                      "description": "Date and time on which the report is generated. Attribute is available only if report is generated."
                    }
                  }
                },
                "example": {
                  "requestId": "98884f2c-46c7-48c6-8e19-0946ff371442",
                  "requestStatus": "RECEIVED",
                  "requestSubmissionDate": "2020-09-28T09:14:19",
                  "reportType": "ITEM",
                  "reportVersion": "v1",
                  "payload": {
                    "rowFilters": [
                      {
                        "type": "rangeFilter",
                        "columnName": "Offer Start Date",
                        "from": "2020-03-16"
                      },
                      {
                        "type": "rangeFilter",
                        "columnName": "Offer End Date",
                        "to": "2021-06-16"
                      },
                      {
                        "type": "rangeFilter",
                        "columnName": "Price",
                        "from": "10",
                        "to": "100"
                      },
                      {
                        "type": "enumFilter",
                        "columnName": "Publish Status",
                        "values": [
                          "PUBLISHED",
                          "RETIRED"
                        ]
                      }
                    ],
                    "excludeColumns": [
                      "Average Rating",
                      "Shelf Name"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EnumFilter": {
        "title": "EnumFilter",
        "required": [
          "columnName",
          "type"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "description": "Enum filter values which has to be included in report",
            "items": {
              "type": "string",
              "description": "Enum filter values which has to be included in report"
            }
          },
          "columnName": {
            "type": "string",
            "description": "Column on which filter has to be applied"
          },
          "type": {
            "type": "string",
            "description": "Type of the filter",
            "enum": [
              "rangeFilter",
              "enumFilter"
            ]
          }
        }
      },
      "GenerateReportPayload": {
        "type": "object",
        "properties": {
          "rowFilters": {
            "type": "array",
            "description": "Row Level filters",
            "items": {
              "type": "object",
              "description": "Supertype of all row filters.",
              "anyOf": [
                {
                  "title": "EnumFilter",
                  "required": [
                    "columnName",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "description": "Enum filter values which has to be included in report",
                      "items": {
                        "type": "string",
                        "description": "Enum filter values which has to be included in report"
                      }
                    },
                    "columnName": {
                      "type": "string",
                      "description": "Column on which filter has to be applied"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the filter",
                      "enum": [
                        "rangeFilter",
                        "enumFilter"
                      ]
                    }
                  }
                },
                {
                  "title": "RangeFilter",
                  "required": [
                    "columnName",
                    "rowFilterType"
                  ],
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "Filter range start"
                    },
                    "to": {
                      "type": "string",
                      "description": "Filter range end"
                    },
                    "rowFilterType": {
                      "type": "string",
                      "description": "Type of the filter",
                      "enum": [
                        "rangeFilter",
                        "enumFilter"
                      ]
                    },
                    "columnName": {
                      "type": "string",
                      "description": "Column on which filter has to be applied"
                    }
                  }
                }
              ]
            }
          },
          "excludeColumns": {
            "type": "array",
            "description": "Columns to exclude from report",
            "items": {
              "type": "string",
              "description": "Columns to exclude from report"
            }
          }
        },
        "description": "Request Payload"
      },
      "GenerateReportResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Automated ID generated by system that uniquely identifies the report request.",
            "format": "uuid"
          },
          "requestStatus": {
            "type": "string",
            "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
            "enum": [
              "RECEIVED",
              "INPROGRESS",
              "READY",
              "ERROR"
            ]
          },
          "requestSubmissionDate": {
            "type": "string",
            "description": "Date and time on which the report request is submitted."
          },
          "reportType": {
            "type": "string",
            "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
            "enum": [
              "ITEM"
            ]
          },
          "reportVersion": {
            "type": "string",
            "description": "Version of report for which the request is created. Example, v1."
          },
          "payload": {
            "type": "object",
            "properties": {
              "rowFilters": {
                "type": "array",
                "description": "Row Level filters",
                "items": {
                  "type": "object",
                  "description": "Supertype of all row filters.",
                  "anyOf": [
                    {
                      "title": "EnumFilter",
                      "required": [
                        "columnName",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Enum filter values which has to be included in report",
                          "items": {
                            "type": "string",
                            "description": "Enum filter values which has to be included in report"
                          }
                        },
                        "columnName": {
                          "type": "string",
                          "description": "Column on which filter has to be applied"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of the filter",
                          "enum": [
                            "rangeFilter",
                            "enumFilter"
                          ]
                        }
                      }
                    },
                    {
                      "title": "RangeFilter",
                      "required": [
                        "columnName",
                        "rowFilterType"
                      ],
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "Filter range start"
                        },
                        "to": {
                          "type": "string",
                          "description": "Filter range end"
                        },
                        "rowFilterType": {
                          "type": "string",
                          "description": "Type of the filter",
                          "enum": [
                            "rangeFilter",
                            "enumFilter"
                          ]
                        },
                        "columnName": {
                          "type": "string",
                          "description": "Column on which filter has to be applied"
                        }
                      }
                    }
                  ]
                }
              },
              "excludeColumns": {
                "type": "array",
                "description": "Columns to exclude from report",
                "items": {
                  "type": "string",
                  "description": "Columns to exclude from report"
                }
              }
            },
            "description": "Request Payload"
          }
        }
      },
      "RangeFilter": {
        "title": "RangeFilter",
        "required": [
          "columnName",
          "rowFilterType"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Filter range start"
          },
          "to": {
            "type": "string",
            "description": "Filter range end"
          },
          "rowFilterType": {
            "type": "string",
            "description": "Type of the filter",
            "enum": [
              "rangeFilter",
              "enumFilter"
            ]
          },
          "columnName": {
            "type": "string",
            "description": "Column on which filter has to be applied"
          }
        }
      },
      "RowFilter": {
        "type": "object",
        "description": "Supertype of all row filters.",
        "anyOf": [
          {
            "title": "EnumFilter",
            "required": [
              "columnName",
              "type"
            ],
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "description": "Enum filter values which has to be included in report",
                "items": {
                  "type": "string",
                  "description": "Enum filter values which has to be included in report"
                }
              },
              "columnName": {
                "type": "string",
                "description": "Column on which filter has to be applied"
              },
              "type": {
                "type": "string",
                "description": "Type of the filter",
                "enum": [
                  "rangeFilter",
                  "enumFilter"
                ]
              }
            }
          },
          {
            "title": "RangeFilter",
            "required": [
              "columnName",
              "rowFilterType"
            ],
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "description": "Filter range start"
              },
              "to": {
                "type": "string",
                "description": "Filter range end"
              },
              "rowFilterType": {
                "type": "string",
                "description": "Type of the filter",
                "enum": [
                  "rangeFilter",
                  "enumFilter"
                ]
              },
              "columnName": {
                "type": "string",
                "description": "Column on which filter has to be applied"
              }
            }
          }
        ]
      },
      "DownloadReportResponse": {
        "type": "object",
        "properties": {
          "downloadURL": {
            "type": "string",
            "description": "URL to be used to download the report."
          },
          "downloadURLExpirationTime": {
            "type": "string",
            "description": "Time till when the URL to download the report will be valid."
          },
          "requestId": {
            "type": "string",
            "description": "Automated ID generated by system that uniquely identifies the report request.",
            "format": "uuid"
          },
          "requestStatus": {
            "type": "string",
            "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
            "enum": [
              "RECEIVED",
              "INPROGRESS",
              "READY",
              "ERROR"
            ]
          },
          "requestSubmissionDate": {
            "type": "string",
            "description": "Date and time on which the report request is submitted."
          },
          "reportType": {
            "type": "string",
            "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
            "enum": [
              "ITEM"
            ]
          },
          "reportVersion": {
            "type": "string",
            "description": "Version of report for which the request is created. Example, v1."
          },
          "reportGenerationDate": {
            "type": "string",
            "description": "Date and time on which the report is generated. Attribute is available only if report is generated."
          }
        }
      },
      "RequestStatusResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Automated ID generated by system that uniquely identifies the report request.",
            "format": "uuid"
          },
          "requestStatus": {
            "type": "string",
            "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
            "enum": [
              "RECEIVED",
              "INPROGRESS",
              "READY",
              "ERROR"
            ]
          },
          "requestSubmissionDate": {
            "type": "string",
            "description": "Date and time on which the report request is submitted."
          },
          "reportType": {
            "type": "string",
            "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
            "enum": [
              "ITEM"
            ]
          },
          "reportVersion": {
            "type": "string",
            "description": "Version of report for which the request is created. Example, v1."
          },
          "payload": {
            "type": "object",
            "properties": {
              "rowFilters": {
                "type": "array",
                "description": "Row Level filters",
                "items": {
                  "type": "object",
                  "description": "Supertype of all row filters.",
                  "anyOf": [
                    {
                      "title": "EnumFilter",
                      "required": [
                        "columnName",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "description": "Enum filter values which has to be included in report",
                          "items": {
                            "type": "string",
                            "description": "Enum filter values which has to be included in report"
                          }
                        },
                        "columnName": {
                          "type": "string",
                          "description": "Column on which filter has to be applied"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of the filter",
                          "enum": [
                            "rangeFilter",
                            "enumFilter"
                          ]
                        }
                      }
                    },
                    {
                      "title": "RangeFilter",
                      "required": [
                        "columnName",
                        "rowFilterType"
                      ],
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "Filter range start"
                        },
                        "to": {
                          "type": "string",
                          "description": "Filter range end"
                        },
                        "rowFilterType": {
                          "type": "string",
                          "description": "Type of the filter",
                          "enum": [
                            "rangeFilter",
                            "enumFilter"
                          ]
                        },
                        "columnName": {
                          "type": "string",
                          "description": "Column on which filter has to be applied"
                        }
                      }
                    }
                  ]
                }
              },
              "excludeColumns": {
                "type": "array",
                "description": "Columns to exclude from report",
                "items": {
                  "type": "string",
                  "description": "Columns to exclude from report"
                }
              }
            },
            "description": "Request Payload"
          },
          "reportGenerationDate": {
            "type": "string",
            "description": "Date and time on which the report is generated. Attribute is available only if report is generated."
          }
        }
      },
      "RequestsStatusResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current page",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Number of records fetched.",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "Number of records to be returned. Default is 10.",
            "format": "int32"
          },
          "nextCursor": {
            "type": "string",
            "description": "Used for pagination when more than specified limit (or default 10) records are found. Use this param for next API call. Just have to use this value as query param. Need to pass only the cursor value and not the initial API call query params. For e.g. if ['nextCursor'='reportType=ITEM&requestStatus=ERROR&requestSubmissionStartDate=2021-08-20T10:52:59Z&requestSubmissionEndDate=2021-09-14T10:52:59Z&page=2&limit=1'] then subsequent call to will be [marketplace.walmartapis.com/v3/reports/reportRequests?reportType=ITEM&requestStatus=ERROR&requestSubmissionStartDate=2021-08-20T10:52:59Z&requestSubmissionEndDate=2021-09-14T10:52:59Z&page=2&limit=1]. Just have to use nextCursor value instead of query params"
          },
          "requests": {
            "type": "array",
            "description": "List of requests",
            "items": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "Automated ID generated by system that uniquely identifies the report request.",
                  "format": "uuid"
                },
                "requestStatus": {
                  "type": "string",
                  "description": "Status of report request. Possible values are RECEIVED, INPROGRESS, READY, ERROR.",
                  "enum": [
                    "RECEIVED",
                    "INPROGRESS",
                    "READY",
                    "ERROR"
                  ]
                },
                "requestSubmissionDate": {
                  "type": "string",
                  "description": "Date and time on which the report request is submitted."
                },
                "reportType": {
                  "type": "string",
                  "description": "Type of report for which the request is created. Example, ITEM for Item Report.",
                  "enum": [
                    "ITEM"
                  ]
                },
                "reportVersion": {
                  "type": "string",
                  "description": "Version of report for which the request is created. Example, v1."
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "rowFilters": {
                      "type": "array",
                      "description": "Row Level filters",
                      "items": {
                        "type": "object",
                        "description": "Supertype of all row filters.",
                        "anyOf": [
                          {
                            "title": "EnumFilter",
                            "required": [
                              "columnName",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "description": "Enum filter values which has to be included in report",
                                "items": {
                                  "type": "string",
                                  "description": "Enum filter values which has to be included in report"
                                }
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column on which filter has to be applied"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of the filter",
                                "enum": [
                                  "rangeFilter",
                                  "enumFilter"
                                ]
                              }
                            }
                          },
                          {
                            "title": "RangeFilter",
                            "required": [
                              "columnName",
                              "rowFilterType"
                            ],
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "string",
                                "description": "Filter range start"
                              },
                              "to": {
                                "type": "string",
                                "description": "Filter range end"
                              },
                              "rowFilterType": {
                                "type": "string",
                                "description": "Type of the filter",
                                "enum": [
                                  "rangeFilter",
                                  "enumFilter"
                                ]
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column on which filter has to be applied"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "excludeColumns": {
                      "type": "array",
                      "description": "Columns to exclude from report",
                      "items": {
                        "type": "string",
                        "description": "Columns to exclude from report"
                      }
                    }
                  },
                  "description": "Request Payload"
                },
                "reportGenerationDate": {
                  "type": "string",
                  "description": "Date and time on which the report is generated. Attribute is available only if report is generated."
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Basic YzcyOTFjNmItNzI5MC00...."
      },
      "accessToken": {
        "name": "WM_SEC.ACCESS_TOKEN",
        "in": "header",
        "description": "The access token retrieved in the Token API call",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
      },
      "channelType": {
        "name": "WM_CONSUMER.CHANNEL.TYPE",
        "in": "header",
        "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "correlationId": {
        "name": "WM_QOS.CORRELATION_ID",
        "in": "header",
        "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
      },
      "svcName": {
        "name": "WM_SVC.NAME",
        "in": "header",
        "description": "Walmart Service Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Walmart Service Name"
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      }
    },
    "securitySchemes": {
      "basicScheme": {
        "type": "http",
        "description": "",
        "name": "Authorization",
        "in": "header",
        "scheme": "basic"
      }
    }
  }
}