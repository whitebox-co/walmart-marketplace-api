{
  "openapi": "3.0.1",
  "info": {
    "title": "Price Management",
    "description": "The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item"
  },
  "servers": [
    {
      "url": "https://marketplace.walmartapis.com",
      "description": "Production URL"
    },
    {
      "url": "https://sandbox.walmartapis.com",
      "description": "Sandbox URL"
    }
  ],
  "security": [
    {
      "basicScheme": []
    }
  ],
  "paths": {
    "/v3/repricer/strategy/{strategyCollectionId}": {
      "put": {
        "tags": [
          "Prices"
        ],
        "summary": "Update Repricer Strategy",
        "description": "Updates the existing strategy",
        "operationId": "updateStrategy",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "The request body will have the strategy related information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repricerStrategy": {
                    "type": "string",
                    "description": "Name of the Strategy Collection",
                    "example": "Buy Box Strategy For testing"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Status of the Strategy Collection",
                    "example": true
                  },
                  "enableRepricerForPromotion": {
                    "type": "boolean",
                    "description": "Status of item on promotions to be enable on repricer",
                    "example": true
                  },
                  "strategies": {
                    "type": "array",
                    "description": "Strategies",
                    "items": {
                      "type": "object",
                      "properties": {
                        "strategyType": {
                          "type": "string",
                          "enum": [
                            "Buy Box Price",
                            "External Price",
                            "Competitive Price"
                          ]
                        },
                        "adjustmentType": {
                          "type": "string",
                          "enum": [
                            "UNIT",
                            "PERCENTAGE"
                          ]
                        },
                        "adjustmentValue": {
                          "type": "number",
                          "format": "double",
                          "example": 1.2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repricerStrategy": {
                      "type": "string",
                      "example": "Buy Box Strategy For testing"
                    },
                    "strategyCollectionId": {
                      "type": "string",
                      "example": "41678999-a088-4fd8-9eb4-55f8d8ed4ac8"
                    },
                    "enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "enableRepricerForPromotion": {
                      "type": "boolean",
                      "example": true
                    },
                    "strategies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategyType": {
                            "type": "string",
                            "enum": [
                              "Buy Box Price",
                              "External Price",
                              "Competitive Price"
                            ]
                          },
                          "adjustmentType": {
                            "type": "string",
                            "enum": [
                              "UNIT",
                              "PERCENTAGE"
                            ]
                          },
                          "adjustmentValue": {
                            "type": "number",
                            "format": "double",
                            "example": 1.2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prices"
        ],
        "summary": "Delete Repricer Strategy",
        "description": "Deletes the strategy",
        "operationId": "deleteStrategy",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Strategy with Strategy Collection Id : 41678999-a088-4fd8-9eb4-55f8d8ed4ac8 deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/repricer/incentive": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "List of Incentive Items",
        "description": "Get the list of incentive items",
        "operationId": "getRepricerIncentive",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Specify number of items to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specify the offset of item list to be returned.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Specify the sort criteria for items. Examples of the allowed values are INCENTIVE_END_DATE or INCENTIVE_LIMIT",
            "required": false,
            "schema": {
              "type": "string",
              "default": "INCENTIVE_LIMIT"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Specify the sort order for given sort criteria. Examples of the allowed values are ASC or DESC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalItems": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productName": {
                            "type": "string",
                            "example": "Ring Defense"
                          },
                          "skuId": {
                            "type": "string",
                            "example": "sku123"
                          },
                          "sellerPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 22
                          },
                          "floorPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 14
                          },
                          "incentiveLimit": {
                            "type": "number",
                            "format": "double",
                            "example": 3
                          },
                          "incentiveStartDate": {
                            "type": "string",
                            "example": "2023-06-22"
                          },
                          "incentiveEndDate": {
                            "type": "string",
                            "example": "2023-07-22"
                          },
                          "shippingPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 0
                          },
                          "competitivePrice": {
                            "type": "number",
                            "format": "double",
                            "example": 21
                          },
                          "competitorShippingPrice": {
                            "type": "number",
                            "format": "double",
                            "example": 1
                          },
                          "competitorUrl": {
                            "type": "string",
                            "example": "amazon.com/dp/123"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prices"
        ],
        "summary": "Assign Incentive items to Repricer",
        "description": "Assigns incentive items to the default price incentives strategy, ‘Match Competitive Price’",
        "operationId": "updateRepricerIncentive",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skus"
                ],
                "type": "object",
                "properties": {
                  "skus": {
                    "type": "array",
                    "description": "selected skus",
                    "items": {
                      "type": "string",
                      "description": "selected skus"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "example": "AFEE4EEC9C3541B6A7B58E694416EC82@AUoBAwA"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorMessage": {
                            "type": "string",
                            "example": "SKU XX is not eligible for price incentives and will not be price adjusted"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/price": {
      "put": {
        "tags": [
          "Prices"
        ],
        "summary": "Update a price",
        "description": "Updates the regular price for a given item.",
        "operationId": "updatePrice",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "The request body consists of a Feed file attached to the request.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pricing",
                  "sku"
                ],
                "type": "object",
                "properties": {
                  "offerId": {
                    "type": "string",
                    "description": "This is applicable only for promotions"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "replaceAll": {
                    "type": "string",
                    "description": "This is applicable only for promotions",
                    "enum": [
                      "true",
                      "false"
                    ]
                  },
                  "pricing": {
                    "type": "array",
                    "items": {
                      "required": [
                        "currentPrice",
                        "currentPriceType"
                      ],
                      "type": "object",
                      "properties": {
                        "effectiveDate": {
                          "type": "string",
                          "description": "This is applicable only for promotions",
                          "format": "date-time"
                        },
                        "expirationDate": {
                          "type": "string",
                          "description": "This is applicable only for promotions",
                          "format": "date-time"
                        },
                        "promoId": {
                          "type": "string",
                          "description": "This is applicable only for promotions"
                        },
                        "processMode": {
                          "type": "string",
                          "description": "This is applicable only for promotions",
                          "enum": [
                            "UPSERT",
                            "DELETE"
                          ]
                        },
                        "currentPriceType": {
                          "type": "string",
                          "description": "This is applicable only for both promotions and price",
                          "enum": [
                            "BASE",
                            "REDUCED",
                            "CLEARANCE"
                          ]
                        },
                        "currentPrice": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "enum": [
                                "USD",
                                "CAD"
                              ]
                            },
                            "amount": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "comparisonPriceType": {
                          "type": "string",
                          "description": "This is applicable only for promotions",
                          "enum": [
                            "BASE"
                          ]
                        },
                        "comparisonPrice": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "enum": [
                                "USD",
                                "CAD"
                              ]
                            },
                            "amount": {
                              "type": "number",
                              "format": "double"
                            }
                          },
                          "description": "This is applicable only for promotions"
                        },
                        "priceDisplayCodes": {
                          "type": "string",
                          "description": "Represent promo placement. This is applicable only for promotions",
                          "enum": [
                            "CART",
                            "CHECKOUT"
                          ]
                        }
                      }
                    }
                  },
                  "definitions": {
                    "type": "object"
                  }
                }
              },
              "example": {
                "sku": "97964_KFTest",
                "pricing": [
                  {
                    "currentPriceType": "BASE",
                    "currentPrice": {
                      "currency": "USD",
                      "amount": 10
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "xml": {
                        "name": "error"
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          },
                          "errorIdentifiers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "component": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "gatewayErrorCategory": {
                            "type": "string",
                            "enum": [
                              "INTERNAL_DATA_ERROR",
                              "EXTERNAL_DATA_ERROR",
                              "SYSTEM_ERROR"
                            ]
                          }
                        },
                        "xml": {
                          "name": "GatewayError"
                        }
                      }
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "mart": {
                      "type": "string",
                      "description": "Marketplace name. Example: Walmart-US",
                      "xml": {
                        "namespace": "http://walmart.com/"
                      }
                    },
                    "sku": {
                      "type": "string",
                      "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                      "xml": {
                        "namespace": "http://walmart.com/"
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A message of acknowledgement for a price update",
                      "xml": {
                        "namespace": "http://walmart.com/"
                      }
                    }
                  },
                  "xml": {
                    "name": "ItemPriceResponse",
                    "namespace": "http://walmart.com/"
                  }
                },
                "example": {
                  "ItemPriceResponse": {
                    "mart": "WALMART_US",
                    "message": "Thank you. Your price has been updated. Please allow up to five minutes for this change to be reflected on the site.",
                    "sku": "97964_KFTest"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "xml": {
                        "name": "error"
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          },
                          "errorIdentifiers": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "component": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "gatewayErrorCategory": {
                            "type": "string",
                            "enum": [
                              "INTERNAL_DATA_ERROR",
                              "EXTERNAL_DATA_ERROR",
                              "SYSTEM_ERROR"
                            ]
                          }
                        },
                        "xml": {
                          "name": "GatewayError"
                        }
                      }
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "mart": {
                      "type": "string",
                      "description": "Marketplace name. Example: Walmart-US",
                      "xml": {
                        "namespace": "http://walmart.com/"
                      }
                    },
                    "sku": {
                      "type": "string",
                      "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                      "xml": {
                        "namespace": "http://walmart.com/"
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A message of acknowledgement for a price update",
                      "xml": {
                        "namespace": "http://walmart.com/"
                      }
                    }
                  },
                  "xml": {
                    "name": "ItemPriceResponse",
                    "namespace": "http://walmart.com/"
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:ItemPriceResponse xmlns:ns2=\"http://walmart.com/\">\n    <ns2:mart>WALMART_US</ns2:mart>\n    <ns2:sku>97964_KFTest</ns2:sku>\n    <ns2:message>Thank you. Your price has been updated. Please allow up to five minutes for this change to be reflected on the site.</ns2:message>\n</ns2:ItemPriceResponse>\n"
              }
            }
          }
        }
      }
    },
    "/v3/repricerFeeds": {
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Assign/Unassign items to/from Repricer Strategy",
        "description": "Add/Remove one or more items from a strategy",
        "operationId": "getRepricerFeed",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ItemFeedHeader": {
                    "type": "object",
                    "properties": {
                      "processMode": {
                        "type": "string",
                        "example": "REPLACE"
                      },
                      "subset": {
                        "type": "string",
                        "example": "EXTERNAL"
                      },
                      "mart": {
                        "type": "string",
                        "example": "WALMART_US"
                      },
                      "sellingChannel": {
                        "type": "string",
                        "example": "repricerstrategy"
                      },
                      "version": {
                        "type": "string",
                        "example": "1.0"
                      },
                      "locale": {
                        "type": "string",
                        "example": "en"
                      }
                    }
                  },
                  "Item": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Strategy": {
                          "type": "object",
                          "properties": {
                            "sku": {
                              "type": "string",
                              "example": "06068064605122shoe"
                            },
                            "repricerStrategy": {
                              "type": "string",
                              "example": "Match Competitive Price"
                            },
                            "minimumSellerAllowedPrice": {
                              "type": "number",
                              "format": "double",
                              "example": 7.2
                            },
                            "maximumSellerAllowedPrice": {
                              "type": "number",
                              "format": "double",
                              "example": 8
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "example": "AFEE4EEC9C3541B6A7B58E694416EC82@AUoBAwA"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/repricer/strategy": {
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Create Repricer Strategy",
        "description": "Creates a new strategy for the seller",
        "operationId": "createStrategy",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "The request body will have the strategy related information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repricerStrategy": {
                    "type": "string",
                    "description": "Name of the Strategy Collection",
                    "example": "Buy Box Strategy For testing"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Status of the Strategy Collection",
                    "example": true
                  },
                  "enableRepricerForPromotion": {
                    "type": "boolean",
                    "description": "Status of item on promotions to be enable on repricer",
                    "example": true
                  },
                  "strategies": {
                    "type": "array",
                    "description": "Strategies",
                    "items": {
                      "type": "object",
                      "properties": {
                        "strategyType": {
                          "type": "string",
                          "enum": [
                            "Buy Box Price",
                            "External Price",
                            "Competitive Price"
                          ]
                        },
                        "adjustmentType": {
                          "type": "string",
                          "enum": [
                            "UNIT",
                            "PERCENTAGE"
                          ]
                        },
                        "adjustmentValue": {
                          "type": "number",
                          "format": "double",
                          "example": 1.2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repricerStrategy": {
                      "type": "string",
                      "example": "Buy Box Strategy For testing"
                    },
                    "strategyCollectionId": {
                      "type": "string",
                      "example": "41678999-a088-4fd8-9eb4-55f8d8ed4ac8"
                    },
                    "enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "enableRepricerForPromotion": {
                      "type": "boolean",
                      "example": true
                    },
                    "strategies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategyType": {
                            "type": "string",
                            "enum": [
                              "Buy Box Price",
                              "External Price",
                              "Competitive Price"
                            ]
                          },
                          "adjustmentType": {
                            "type": "string",
                            "enum": [
                              "UNIT",
                              "PERCENTAGE"
                            ]
                          },
                          "adjustmentValue": {
                            "type": "number",
                            "format": "double",
                            "example": 1.2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/feeds": {
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Update bulk prices (Multiple)",
        "description": "Updates prices in bulk.\n\nIn one Feed you can update up to 10,000 items in bulk. To ensure optimal Feed processing time, we recommend sending no more than 1000 items in one Feed and keeping the Feed sizes below 10 MB.\n\nThe price sequence guarantee is observed by the bulk price update functionality, subject to the following rules:\n\nThe timestamp used to determine precedence is passed in the request headers. All price updates in the feed are considered to have the same timestamp. The timestamp in the XML file is used only for auditing.\nYou can send a single SKU multiple times in one Feed. If a SKU is repeated in a Feed, the price will be set for that SKU on Walmart.com, but there is no guarantee as to which SKU's price within that feed will be used.\nThis API should be used in preference to the update a price. It should be called no sooner than 24 hours after a new item is set up and a wpid (Walmart Part ID) is available. Thereafter, the bulk price update has an service level agreement (SLA) of 15 minutes.\n\nAfter the update is submitted, wait for at least five minutes before verifying whether the bulk price update was successful. Individual SKU price update success or failure is only available after the entire feed is processed.\n\nIf a SKU's price update fails (for example, multiple price updates were sent for the same SKU in a single feed), an error will be returned.",
        "operationId": "priceBulkUploads",
        "parameters": [
          {
            "name": "feedType",
            "in": "query",
            "description": "The feed Type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "price",
                "CPT_SELLER_ELIGIBILITY"
              ]
            }
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "The request body consists of a Feed file attached to the request based on the feedType selected ",
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Feed file to upload",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "json1": {
                  "value": {
                    "PriceHeader": {
                      "version": "1.7"
                    },
                    "Price": [
                      {
                        "sku": "30348_KFTest",
                        "pricing": [
                          {
                            "currentPrice": {
                              "currency": "USD",
                              "amount": 3
                            },
                            "currentPriceType": "REDUCED",
                            "comparisonPriceType": "BASE",
                            "comparisonPrice": {
                              "currency": "USD",
                              "amount": 4.99
                            }
                          }
                        ]
                      },
                      {
                        "sku": "OT-PP7F-QGUG",
                        "pricing": [
                          {
                            "currentPrice": {
                              "currency": "USD",
                              "amount": 3
                            },
                            "currentPriceType": "REDUCED",
                            "comparisonPriceType": "BASE",
                            "comparisonPrice": {
                              "currency": "USD",
                              "amount": 4.99
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "xml1": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PriceFeed xmlns=\"http://walmart.com/\">\n    <PriceHeader>\n        <version>1.5.1</version>\n    </PriceHeader>\n    <Price>\n        <itemIdentifier>\n            <sku>30348_KFTest</sku>\n        </itemIdentifier>\n        <pricingList>\n            <pricing>\n                <currentPrice>\n                    <value currency=\"USD\" amount=\"4.00\"/>\n                </currentPrice>\n            </pricing>\n        </pricingList>\n    </Price>\n    <Price>\n        <itemIdentifier>\n            <sku>OT-PP7F-QGUG</sku>\n        </itemIdentifier>\n        <pricingList>\n            <pricing>\n                <currentPrice>\n                    <value currency=\"USD\" amount=\"4.00\"/>\n                </currentPrice>\n            </pricing>\n        </pricingList>\n    </Price>\n</PriceFeed>\n"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "feedId": "14066B6642344B76A8B77AC094F8C63B@AVMBAgA"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:FeedAcknowledgement xmlns:ns2=\"http://walmart.com/\">\n    <ns2:feedId>55DE8A53B09F41BBBF261C1AB5FB2BC8@AVMBAgA</ns2:feedId>\n</ns2:FeedAcknowledgement>"
              }
            }
          }
        }
      }
    },
    "/v3/cppreference": {
      "post": {
        "tags": [
          "Prices"
        ],
        "summary": "Set up CAP SKU All",
        "description": "This API helps Sellers to completely opt-in or opt-out from CAP program.\n\nIf the subsidyEnrolled value = \"true\", the Seller enrolls in the CAP program. All eligible SKUs (current and future) are by default opt-in. Seller should use the SKU opt-in/opt-out API to opt-out individual items.\n\nIf the subsidyEnrolled value = \"false\", the Seller stops participating in the CAP program and all eligible SKUs (current and future) are opt-out of the CAP program.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-price/#1290"
        },
        "operationId": "optCapProgramInPrice",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subsidyEnrolled": {
                    "type": "boolean",
                    "description": "A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program"
                  },
                  "subsidyPreference": {
                    "type": "boolean",
                    "description": "A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "martId": {
                      "type": "string",
                      "description": "A unique ID that a user or seller uses for a marketplace."
                    },
                    "statusInfo": {
                      "type": "object",
                      "properties": {
                        "subsidyEnrolled": {
                          "type": "boolean",
                          "description": "A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program"
                        },
                        "subsidyPreference": {
                          "type": "boolean",
                          "description": "A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/repricer/strategies": {
      "get": {
        "tags": [
          "Prices"
        ],
        "summary": "List of Repricer Strategies",
        "description": "Get the list of strategies",
        "operationId": "getStrategies",
        "parameters": [
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalElements": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "strategyCollections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "repricerStrategy": {
                            "type": "string",
                            "example": "Buy Box Strategy For testing"
                          },
                          "strategyCollectionId": {
                            "type": "string",
                            "example": "41678999-a088-4fd8-9eb4-55f8d8ed4ac8"
                          },
                          "enabled": {
                            "type": "boolean",
                            "example": true
                          },
                          "assignedCount": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                          },
                          "enableRepricerForPromotion": {
                            "type": "boolean",
                            "example": true
                          },
                          "strategies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyType": {
                                  "type": "string",
                                  "enum": [
                                    "Buy Box Price",
                                    "External Price",
                                    "Competitive Price"
                                  ]
                                },
                                "adjustmentType": {
                                  "type": "string",
                                  "enum": [
                                    "UNIT",
                                    "PERCENTAGE"
                                  ]
                                },
                                "adjustmentValue": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.2
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RepricerEntityResponse": {
        "type": "object",
        "properties": {
          "repricerStrategy": {
            "type": "string",
            "example": "Buy Box Strategy For testing"
          },
          "strategyCollectionId": {
            "type": "string",
            "example": "41678999-a088-4fd8-9eb4-55f8d8ed4ac8"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "enableRepricerForPromotion": {
            "type": "boolean",
            "example": true
          },
          "strategies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "strategyType": {
                  "type": "string",
                  "enum": [
                    "Buy Box Price",
                    "External Price",
                    "Competitive Price"
                  ]
                },
                "adjustmentType": {
                  "type": "string",
                  "enum": [
                    "UNIT",
                    "PERCENTAGE"
                  ]
                },
                "adjustmentValue": {
                  "type": "number",
                  "format": "double",
                  "example": 1.2
                }
              }
            }
          }
        }
      },
      "RepricerStrategyType": {
        "type": "object",
        "properties": {
          "strategyType": {
            "type": "string",
            "enum": [
              "Buy Box Price",
              "External Price",
              "Competitive Price"
            ]
          },
          "adjustmentType": {
            "type": "string",
            "enum": [
              "UNIT",
              "PERCENTAGE"
            ]
          },
          "adjustmentValue": {
            "type": "number",
            "format": "double",
            "example": 1.2
          }
        }
      },
      "RepricerEntityRequest": {
        "type": "object",
        "properties": {
          "repricerStrategy": {
            "type": "string",
            "description": "Name of the Strategy Collection",
            "example": "Buy Box Strategy For testing"
          },
          "enabled": {
            "type": "boolean",
            "description": "Status of the Strategy Collection",
            "example": true
          },
          "enableRepricerForPromotion": {
            "type": "boolean",
            "description": "Status of item on promotions to be enable on repricer",
            "example": true
          },
          "strategies": {
            "type": "array",
            "description": "Strategies",
            "items": {
              "type": "object",
              "properties": {
                "strategyType": {
                  "type": "string",
                  "enum": [
                    "Buy Box Price",
                    "External Price",
                    "Competitive Price"
                  ]
                },
                "adjustmentType": {
                  "type": "string",
                  "enum": [
                    "UNIT",
                    "PERCENTAGE"
                  ]
                },
                "adjustmentValue": {
                  "type": "number",
                  "format": "double",
                  "example": 1.2
                }
              }
            }
          }
        }
      },
      "ErrorResponseDto": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "example": "SKU XX is not eligible for price incentives and will not be price adjusted"
          }
        }
      },
      "UpdateRepricerIncentiveResponse": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "example": "AFEE4EEC9C3541B6A7B58E694416EC82@AUoBAwA"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string",
                  "example": "SKU XX is not eligible for price incentives and will not be price adjusted"
                }
              }
            }
          }
        }
      },
      "UpdateRepricerIncentiveRequest": {
        "required": [
          "skus"
        ],
        "type": "object",
        "properties": {
          "skus": {
            "type": "array",
            "description": "selected skus",
            "items": {
              "type": "string",
              "description": "selected skus"
            }
          }
        }
      },
      "Cause": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Cause"
        }
      },
      "GatewayError": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFO",
              "WARN",
              "ERROR"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SYSTEM",
              "REQUEST",
              "DATA"
            ]
          },
          "causes": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "Cause"
              }
            }
          },
          "errorIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "component": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "gatewayErrorCategory": {
            "type": "string",
            "enum": [
              "INTERNAL_DATA_ERROR",
              "EXTERNAL_DATA_ERROR",
              "SYSTEM_ERROR"
            ]
          }
        },
        "xml": {
          "name": "GatewayError"
        }
      },
      "ItemPriceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "xml": {
              "name": "error"
            },
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                },
                "errorIdentifiers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "component": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceName": {
                  "type": "string"
                },
                "gatewayErrorCategory": {
                  "type": "string",
                  "enum": [
                    "INTERNAL_DATA_ERROR",
                    "EXTERNAL_DATA_ERROR",
                    "SYSTEM_ERROR"
                  ]
                }
              },
              "xml": {
                "name": "GatewayError"
              }
            }
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "mart": {
            "type": "string",
            "description": "Marketplace name. Example: Walmart-US",
            "xml": {
              "namespace": "http://walmart.com/"
            }
          },
          "sku": {
            "type": "string",
            "description": "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
            "xml": {
              "namespace": "http://walmart.com/"
            }
          },
          "message": {
            "type": "string",
            "description": "A message of acknowledgement for a price update",
            "xml": {
              "namespace": "http://walmart.com/"
            }
          }
        },
        "xml": {
          "name": "ItemPriceResponse",
          "namespace": "http://walmart.com/"
        }
      },
      "ComparisonPrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "USD",
              "CAD"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "This is applicable only for promotions"
      },
      "CurrentPrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "USD",
              "CAD"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Price": {
        "required": [
          "pricing",
          "sku"
        ],
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "This is applicable only for promotions"
          },
          "sku": {
            "type": "string"
          },
          "replaceAll": {
            "type": "string",
            "description": "This is applicable only for promotions",
            "enum": [
              "true",
              "false"
            ]
          },
          "pricing": {
            "type": "array",
            "items": {
              "required": [
                "currentPrice",
                "currentPriceType"
              ],
              "type": "object",
              "properties": {
                "effectiveDate": {
                  "type": "string",
                  "description": "This is applicable only for promotions",
                  "format": "date-time"
                },
                "expirationDate": {
                  "type": "string",
                  "description": "This is applicable only for promotions",
                  "format": "date-time"
                },
                "promoId": {
                  "type": "string",
                  "description": "This is applicable only for promotions"
                },
                "processMode": {
                  "type": "string",
                  "description": "This is applicable only for promotions",
                  "enum": [
                    "UPSERT",
                    "DELETE"
                  ]
                },
                "currentPriceType": {
                  "type": "string",
                  "description": "This is applicable only for both promotions and price",
                  "enum": [
                    "BASE",
                    "REDUCED",
                    "CLEARANCE"
                  ]
                },
                "currentPrice": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "enum": [
                        "USD",
                        "CAD"
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                },
                "comparisonPriceType": {
                  "type": "string",
                  "description": "This is applicable only for promotions",
                  "enum": [
                    "BASE"
                  ]
                },
                "comparisonPrice": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "enum": [
                        "USD",
                        "CAD"
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "description": "This is applicable only for promotions"
                },
                "priceDisplayCodes": {
                  "type": "string",
                  "description": "Represent promo placement. This is applicable only for promotions",
                  "enum": [
                    "CART",
                    "CHECKOUT"
                  ]
                }
              }
            }
          },
          "definitions": {
            "type": "object"
          }
        }
      },
      "Pricing": {
        "required": [
          "currentPrice",
          "currentPriceType"
        ],
        "type": "object",
        "properties": {
          "effectiveDate": {
            "type": "string",
            "description": "This is applicable only for promotions",
            "format": "date-time"
          },
          "expirationDate": {
            "type": "string",
            "description": "This is applicable only for promotions",
            "format": "date-time"
          },
          "promoId": {
            "type": "string",
            "description": "This is applicable only for promotions"
          },
          "processMode": {
            "type": "string",
            "description": "This is applicable only for promotions",
            "enum": [
              "UPSERT",
              "DELETE"
            ]
          },
          "currentPriceType": {
            "type": "string",
            "description": "This is applicable only for both promotions and price",
            "enum": [
              "BASE",
              "REDUCED",
              "CLEARANCE"
            ]
          },
          "currentPrice": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "enum": [
                  "USD",
                  "CAD"
                ]
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "comparisonPriceType": {
            "type": "string",
            "description": "This is applicable only for promotions",
            "enum": [
              "BASE"
            ]
          },
          "comparisonPrice": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "enum": [
                  "USD",
                  "CAD"
                ]
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "description": "This is applicable only for promotions"
          },
          "priceDisplayCodes": {
            "type": "string",
            "description": "Represent promo placement. This is applicable only for promotions",
            "enum": [
              "CART",
              "CHECKOUT"
            ]
          }
        }
      },
      "FeedUploadResponseDTO": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "example": "AFEE4EEC9C3541B6A7B58E694416EC82@AUoBAwA"
          }
        }
      },
      "FeedItemsHeaderRequestDTO": {
        "type": "object",
        "properties": {
          "processMode": {
            "type": "string",
            "example": "REPLACE"
          },
          "subset": {
            "type": "string",
            "example": "EXTERNAL"
          },
          "mart": {
            "type": "string",
            "example": "WALMART_US"
          },
          "sellingChannel": {
            "type": "string",
            "example": "repricerstrategy"
          },
          "version": {
            "type": "string",
            "example": "1.0"
          },
          "locale": {
            "type": "string",
            "example": "en"
          }
        }
      },
      "FeedItemsRequestDTO": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "example": "06068064605122shoe"
          },
          "repricerStrategy": {
            "type": "string",
            "example": "Match Competitive Price"
          },
          "minimumSellerAllowedPrice": {
            "type": "number",
            "format": "double",
            "example": 7.2
          },
          "maximumSellerAllowedPrice": {
            "type": "number",
            "format": "double",
            "example": 8
          }
        }
      },
      "FeedUploadRequestDTO": {
        "type": "object",
        "properties": {
          "ItemFeedHeader": {
            "type": "object",
            "properties": {
              "processMode": {
                "type": "string",
                "example": "REPLACE"
              },
              "subset": {
                "type": "string",
                "example": "EXTERNAL"
              },
              "mart": {
                "type": "string",
                "example": "WALMART_US"
              },
              "sellingChannel": {
                "type": "string",
                "example": "repricerstrategy"
              },
              "version": {
                "type": "string",
                "example": "1.0"
              },
              "locale": {
                "type": "string",
                "example": "en"
              }
            }
          },
          "Item": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Strategy": {
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "example": "06068064605122shoe"
                    },
                    "repricerStrategy": {
                      "type": "string",
                      "example": "Match Competitive Price"
                    },
                    "minimumSellerAllowedPrice": {
                      "type": "number",
                      "format": "double",
                      "example": 7.2
                    },
                    "maximumSellerAllowedPrice": {
                      "type": "number",
                      "format": "double",
                      "example": 8
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StrategyDetailsRequestDTO": {
        "type": "object",
        "properties": {
          "Strategy": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "example": "06068064605122shoe"
              },
              "repricerStrategy": {
                "type": "string",
                "example": "Match Competitive Price"
              },
              "minimumSellerAllowedPrice": {
                "type": "number",
                "format": "double",
                "example": 7.2
              },
              "maximumSellerAllowedPrice": {
                "type": "number",
                "format": "double",
                "example": 8
              }
            }
          }
        }
      },
      "FeedId": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
          },
          "additionalAttributes": {
            "type": "object",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "CapProgramResponse": {
        "type": "object",
        "properties": {
          "martId": {
            "type": "string",
            "description": "A unique ID that a user or seller uses for a marketplace."
          },
          "statusInfo": {
            "type": "object",
            "properties": {
              "subsidyEnrolled": {
                "type": "boolean",
                "description": "A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program"
              },
              "subsidyPreference": {
                "type": "boolean",
                "description": "A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting"
              }
            }
          }
        }
      },
      "StatusInfo": {
        "type": "object",
        "properties": {
          "subsidyEnrolled": {
            "type": "boolean",
            "description": "A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program"
          },
          "subsidyPreference": {
            "type": "boolean",
            "description": "A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting"
          }
        }
      },
      "RepricerEntityCollectionResponse": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "strategyCollections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "repricerStrategy": {
                  "type": "string",
                  "example": "Buy Box Strategy For testing"
                },
                "strategyCollectionId": {
                  "type": "string",
                  "example": "41678999-a088-4fd8-9eb4-55f8d8ed4ac8"
                },
                "enabled": {
                  "type": "boolean",
                  "example": true
                },
                "assignedCount": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1
                },
                "enableRepricerForPromotion": {
                  "type": "boolean",
                  "example": true
                },
                "strategies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "strategyType": {
                        "type": "string",
                        "enum": [
                          "Buy Box Price",
                          "External Price",
                          "Competitive Price"
                        ]
                      },
                      "adjustmentType": {
                        "type": "string",
                        "enum": [
                          "UNIT",
                          "PERCENTAGE"
                        ]
                      },
                      "adjustmentValue": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RepricerEntityGetResponse": {
        "type": "object",
        "properties": {
          "repricerStrategy": {
            "type": "string",
            "example": "Buy Box Strategy For testing"
          },
          "strategyCollectionId": {
            "type": "string",
            "example": "41678999-a088-4fd8-9eb4-55f8d8ed4ac8"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "assignedCount": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "enableRepricerForPromotion": {
            "type": "boolean",
            "example": true
          },
          "strategies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "strategyType": {
                  "type": "string",
                  "enum": [
                    "Buy Box Price",
                    "External Price",
                    "Competitive Price"
                  ]
                },
                "adjustmentType": {
                  "type": "string",
                  "enum": [
                    "UNIT",
                    "PERCENTAGE"
                  ]
                },
                "adjustmentValue": {
                  "type": "number",
                  "format": "double",
                  "example": 1.2
                }
              }
            }
          }
        }
      },
      "RepricerIncentiveCollectionResponse": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productName": {
                  "type": "string",
                  "example": "Ring Defense"
                },
                "skuId": {
                  "type": "string",
                  "example": "sku123"
                },
                "sellerPrice": {
                  "type": "number",
                  "format": "double",
                  "example": 22
                },
                "floorPrice": {
                  "type": "number",
                  "format": "double",
                  "example": 14
                },
                "incentiveLimit": {
                  "type": "number",
                  "format": "double",
                  "example": 3
                },
                "incentiveStartDate": {
                  "type": "string",
                  "example": "2023-06-22"
                },
                "incentiveEndDate": {
                  "type": "string",
                  "example": "2023-07-22"
                },
                "shippingPrice": {
                  "type": "number",
                  "format": "double",
                  "example": 0
                },
                "competitivePrice": {
                  "type": "number",
                  "format": "double",
                  "example": 21
                },
                "competitorShippingPrice": {
                  "type": "number",
                  "format": "double",
                  "example": 1
                },
                "competitorUrl": {
                  "type": "string",
                  "example": "amazon.com/dp/123"
                }
              }
            }
          }
        }
      },
      "RepricerIncentiveItems": {
        "type": "object",
        "properties": {
          "productName": {
            "type": "string",
            "example": "Ring Defense"
          },
          "skuId": {
            "type": "string",
            "example": "sku123"
          },
          "sellerPrice": {
            "type": "number",
            "format": "double",
            "example": 22
          },
          "floorPrice": {
            "type": "number",
            "format": "double",
            "example": 14
          },
          "incentiveLimit": {
            "type": "number",
            "format": "double",
            "example": 3
          },
          "incentiveStartDate": {
            "type": "string",
            "example": "2023-06-22"
          },
          "incentiveEndDate": {
            "type": "string",
            "example": "2023-07-22"
          },
          "shippingPrice": {
            "type": "number",
            "format": "double",
            "example": 0
          },
          "competitivePrice": {
            "type": "number",
            "format": "double",
            "example": 21
          },
          "competitorShippingPrice": {
            "type": "number",
            "format": "double",
            "example": 1
          },
          "competitorUrl": {
            "type": "string",
            "example": "amazon.com/dp/123"
          }
        }
      },
      "RepricerEntityDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Strategy with Strategy Collection Id : 41678999-a088-4fd8-9eb4-55f8d8ed4ac8 deleted successfully"
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Basic YzcyOTFjNmItNzI5MC00...."
      },
      "accessToken": {
        "name": "WM_SEC.ACCESS_TOKEN",
        "in": "header",
        "description": "The access token retrieved in the Token API call",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
      },
      "channelType": {
        "name": "WM_CONSUMER.CHANNEL.TYPE",
        "in": "header",
        "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "correlationId": {
        "name": "WM_QOS.CORRELATION_ID",
        "in": "header",
        "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
      },
      "svcName": {
        "name": "WM_SVC.NAME",
        "in": "header",
        "description": "Walmart Service Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Walmart Service Name"
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      }
    }
  }
}