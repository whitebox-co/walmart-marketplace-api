{
  "openapi": "3.0.1",
  "info": {
    "title": "Fulfillment Management",
    "description": "With Walmart Fulfillment Services, you can focus on sales while we expertly take care of fast shipping, seamless returns, and customer service. Simply send your inventory to Walmart fulfillment centers, where we will store your products securely and prepare them swiftly for shipping when an order is placed."
  },
  "servers": [
    {
      "url": "https://marketplace.walmartapis.com",
      "description": "Production URL"
    },
    {
      "url": "https://sandbox.walmartapis.com",
      "description": "Sandbox URL"
    }
  ],
  "security": [
    {
      "basicScheme": []
    }
  ],
  "paths": {
    "/v3/fulfillment/inbound-shipments": {
      "get": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Get Shipments",
        "description": "After Sellers create an Inbound Order successfully, the response from Create Inbound Shipments API will tell whether the order can be sent in a single shipment to one WFS fulfillment center or needs to be split into multiple shipments to different fulfillment centers. To retrieve the Shipment level info, please call the Get Inbound Shipments API",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2855"
        },
        "operationId": "getInboundShipments",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "offset is the number of records you wish to skip before selecting records.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of Purchase Orders to be returned.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "10"
            }
          },
          {
            "name": "inboundOrderId",
            "in": "query",
            "description": "Unique ID identifying inbound shipment request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Unique ID identifying each shipment.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Current shipment status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromCreateDate",
            "in": "query",
            "description": "Shipment create date starting range",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toCreateDate",
            "in": "query",
            "description": "Shipment create date starting  end range",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "headers": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer",
                          "description": "total number of POs for provided GET request.",
                          "format": "int32"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "provided limit value in the request",
                          "format": "int32"
                        },
                        "offset": {
                          "type": "integer",
                          "description": "provided offset value in the request.",
                          "format": "int32"
                        }
                      }
                    },
                    "payload": {
                      "type": "array",
                      "description": "response payload",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inboundOrderId": {
                            "type": "string",
                            "description": "Unique ID identifying inbound shipment request"
                          },
                          "shipmentId": {
                            "type": "string",
                            "description": "Unique ID identifying inbound shipment"
                          },
                          "shipToAddress": {
                            "type": "object",
                            "properties": {
                              "fcName": {
                                "type": "string",
                                "description": "Facility name"
                              },
                              "addressLine1": {
                                "type": "string",
                                "description": "Address details "
                              },
                              "addressLine2": {
                                "type": "string",
                                "description": "Address details continuation"
                              },
                              "city": {
                                "type": "string",
                                "description": "City name"
                              },
                              "stateCode": {
                                "type": "string",
                                "description": "State code"
                              },
                              "countryCode": {
                                "type": "string",
                                "description": "Country code"
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "Zip code"
                              }
                            },
                            "description": "The address to which sellers need to inbound items"
                          },
                          "returnAddress": {
                            "required": [
                              "addressLine1",
                              "city",
                              "countryCode",
                              "postalCode",
                              "stateCode"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string",
                                "description": "Address details"
                              },
                              "addressLine2": {
                                "type": "string",
                                "description": "Address details continuation"
                              },
                              "city": {
                                "type": "string",
                                "description": "City name"
                              },
                              "stateCode": {
                                "type": "string",
                                "description": "State Code"
                              },
                              "countryCode": {
                                "type": "string",
                                "description": "Country code"
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "Zip code"
                              }
                            },
                            "description": "Retrun address for seller"
                          },
                          "status": {
                            "type": "string",
                            "description": "Current status of the shipment"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "creation date for shipment",
                            "format": "date-time"
                          },
                          "shipmentUnits": {
                            "type": "integer",
                            "description": "Total number of units in the shipment",
                            "format": "int32"
                          },
                          "receivedUnits": {
                            "type": "integer",
                            "description": "Total number of units recived in FC for the shipment",
                            "format": "int32"
                          },
                          "expectedDeliveryDate": {
                            "type": "string",
                            "description": "expected delivery date provided by seller",
                            "format": "date-time"
                          },
                          "updatedExpectedDeliveryDate": {
                            "type": "string",
                            "description": "update expected delivery date based on network capacity",
                            "format": "date-time"
                          },
                          "actualDeliveryDate": {
                            "type": "string",
                            "description": "Actual delivery date of the shipment at FC",
                            "format": "date-time"
                          },
                          "trackingNo": {
                            "type": "array",
                            "description": "Tracking info for the shipment",
                            "items": {
                              "type": "string",
                              "description": "Tracking info for the shipment"
                            }
                          },
                          "carrierName": {
                            "type": "string",
                            "description": "Carrier of the shipment"
                          }
                        },
                        "description": "response payload"
                      }
                    }
                  }
                },
                "example": {
                  "headers": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 177
                  },
                  "payload": [
                    {
                      "inboundOrderId": "may-5-test-2",
                      "shipmentId": "0066618GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "AWAITING_DELIVERY",
                      "createdDate": "2021-05-17T19:02:30.467Z",
                      "shipmentUnits": 1,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-22T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-06-01T23:59:00.000Z",
                      "trackingNo": [
                        "787439195645",
                        "787439195174"
                      ],
                      "carrierName": "WFS-FEDEX"
                    },
                    {
                      "inboundOrderId": "may-21-test9",
                      "shipmentId": "0061782GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "CANCELLED",
                      "createdDate": "2021-05-06T17:49:54.743Z",
                      "shipmentUnits": 0,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-20T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-21-test8",
                      "shipmentId": "0061779GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "CANCELLED",
                      "createdDate": "2021-05-06T17:42:42.577Z",
                      "shipmentUnits": 0,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-06-01T23:59:00.000Z",
                      "trackingNo": [
                        "787450289224"
                      ],
                      "carrierName": "WFS-FEDEX"
                    },
                    {
                      "inboundOrderId": "may-21-test7",
                      "shipmentId": "0061763GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "CANCELLED",
                      "createdDate": "2021-05-06T16:54:47.310Z",
                      "shipmentUnits": 0,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-20T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-21-test6",
                      "shipmentId": "0061752GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "CANCELLED",
                      "createdDate": "2021-05-06T16:31:22.383Z",
                      "shipmentUnits": 0,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-20T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-21-test-3",
                      "shipmentId": "0061726GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "PENDING_SHIPMENT_DETAILS",
                      "createdDate": "2021-05-06T15:09:35.797Z",
                      "shipmentUnits": 1,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-20T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-21-test-2",
                      "shipmentId": "0061712GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "PENDING_SHIPMENT_DETAILS",
                      "createdDate": "2021-05-06T14:31:32.280Z",
                      "shipmentUnits": 3,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-20T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-21-test-1",
                      "shipmentId": "0061665GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "PENDING_SHIPMENT_DETAILS",
                      "createdDate": "2021-05-06T14:23:28.673Z",
                      "shipmentUnits": 1,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-20T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-20T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-4-test-2",
                      "shipmentId": "0060645GDM",
                      "shipToAddress": {
                        "fcName": "NJ3",
                        "addressLine1": "3 Sorbello Way",
                        "city": "Pedricktown",
                        "stateCode": "NJ",
                        "countryCode": "US",
                        "postalCode": "08067"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "PENDING_SHIPMENT_DETAILS",
                      "createdDate": "2021-05-05T01:24:25.840Z",
                      "shipmentUnits": 1,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-22T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-22T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "may-4-test-1",
                      "shipmentId": "0060635GDM",
                      "movedShipmentId": "0060634GDM",
                      "shipToAddress": {
                        "fcName": "KY1",
                        "addressLine1": "120 Velocity Way.",
                        "city": "Shepherdsville",
                        "stateCode": "KY",
                        "countryCode": "US",
                        "postalCode": "40165"
                      },
                      "returnAddress": {
                        "addressLine1": "860 W California Ave",
                        "city": "Sunnyvale",
                        "stateCode": "94086",
                        "countryCode": "CA",
                        "postalCode": "US"
                      },
                      "status": "AWAITING_DELIVERY",
                      "createdDate": "2021-05-04T23:46:18.530Z",
                      "shipmentUnits": 1,
                      "receivedUnits": 0,
                      "expectedDeliveryDate": "2021-05-23T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2021-05-19T23:59:00.000Z",
                      "trackingNo": [
                        "787095506139"
                      ],
                      "carrierName": "WFS-FEDEX"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Create Inbound Shipment",
        "description": "Once you’ve converted items to WFS, you are ready to start shipping items inbound to Walmart. To do this, you will submit an Inbound shipment request. The Inbound shipment details when you expect to ship product, as well as the items and quantities which will be shipped.\n\nEach shipment you send in to WFS should have a corresponding Inbound shipment. In this case, a shipment would be considered a direct truckload, LTL shipment, or set of items shipped via parcel on a given day.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2901"
        },
        "operationId": "createShipment",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "inboundOrderId",
                  "returnAddress"
                ],
                "type": "object",
                "properties": {
                  "inboundOrderId": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string",
                    "description": "Unique ID identifying inbound shipment request"
                  },
                  "returnAddress": {
                    "required": [
                      "addressLine1",
                      "city",
                      "countryCode",
                      "postalCode",
                      "stateCode"
                    ],
                    "type": "object",
                    "properties": {
                      "addressLine1": {
                        "type": "string",
                        "description": "Address details"
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "Address details continuation"
                      },
                      "city": {
                        "type": "string",
                        "description": "City name"
                      },
                      "stateCode": {
                        "type": "string",
                        "description": "State Code"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "Country code"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Zip code"
                      }
                    },
                    "description": "Retrun address for seller"
                  },
                  "orderItems": {
                    "maxItems": 5000,
                    "minItems": 1,
                    "type": "array",
                    "description": "inbound shipment request line items",
                    "xml": {
                      "wrapped": true
                    },
                    "items": {
                      "required": [
                        "expectedDeliveryDate",
                        "innerPackQty",
                        "itemDesc",
                        "itemQty",
                        "productId",
                        "productType",
                        "sku",
                        "vendorPackQty"
                      ],
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "description": "Unique ID identifying product"
                        },
                        "productType": {
                          "type": "string",
                          "description": "Supported product types are GTIN,UPC,EAN"
                        },
                        "sku": {
                          "type": "string",
                          "description": "Seller Item ID"
                        },
                        "itemDesc": {
                          "type": "string",
                          "description": "Item description"
                        },
                        "itemQty": {
                          "minimum": 1,
                          "type": "integer",
                          "description": "Total number of sellable units",
                          "format": "int32"
                        },
                        "vendorPackQty": {
                          "minimum": 1,
                          "type": "integer",
                          "description": "Total number of cases",
                          "format": "int32"
                        },
                        "innerPackQty": {
                          "minimum": 1,
                          "type": "integer",
                          "description": "Total number of sellable units per case",
                          "format": "int32"
                        },
                        "expectedDeliveryDate": {
                          "type": "string",
                          "description": "expected delivery date for shipment",
                          "format": "date-time"
                        },
                        "itemNbr": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "dimensions": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "float"
                          }
                        },
                        "itemWeightQty": {
                          "type": "number",
                          "format": "float"
                        },
                        "nonSortItem": {
                          "type": "boolean"
                        },
                        "shipNode": {
                          "type": "string"
                        }
                      },
                      "description": "inbound shipment request line items"
                    }
                  }
                }
              },
              "example": {
                "inboundOrderId": "8778881015027",
                "returnAddress": {
                  "addressLine1": "860 W California Ave",
                  "addressLine2": "",
                  "city": "Sunnyvale",
                  "stateCode": "CA",
                  "countryCode": "USA",
                  "postalCode": "94086"
                },
                "orderItems": [
                  {
                    "productId": "00894147009695",
                    "productType": "GTIN",
                    "sku": "WILL-SL969",
                    "itemDesc": "Blue jeans",
                    "itemQty": 10,
                    "vendorPackQty": 10,
                    "innerPackQty": 1,
                    "expectedDeliveryDate": "2020-11-21T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "array",
                      "description": "response payload",
                      "items": {
                        "type": "object",
                        "properties": {
                          "shipmentId": {
                            "type": "string",
                            "description": "Unique ID identifying each shipment"
                          },
                          "shipToAddress": {
                            "type": "object",
                            "properties": {
                              "fcName": {
                                "type": "string",
                                "description": "Facility name"
                              },
                              "addressLine1": {
                                "type": "string",
                                "description": "Address details "
                              },
                              "addressLine2": {
                                "type": "string",
                                "description": "Address details continuation"
                              },
                              "city": {
                                "type": "string",
                                "description": "City name"
                              },
                              "stateCode": {
                                "type": "string",
                                "description": "State code"
                              },
                              "countryCode": {
                                "type": "string",
                                "description": "Country code"
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "Zip code"
                              }
                            },
                            "description": "The address to which sellers need to inbound items"
                          },
                          "shipmentItems": {
                            "type": "array",
                            "description": "The items which needs to be send in the shipment",
                            "items": {
                              "type": "object",
                              "properties": {
                                "vendorSku": {
                                  "type": "string",
                                  "description": "Seller Item ID"
                                },
                                "itemQty": {
                                  "type": "integer",
                                  "description": "Total number of sellable units",
                                  "format": "int32"
                                }
                              },
                              "description": "The items which needs to be send in the shipment"
                            }
                          },
                          "expectedDeliveryDate": {
                            "type": "string",
                            "description": "expected delivery date for inbounding shipment. Can be different from provided in the rquest based on network capacity",
                            "format": "date-time"
                          }
                        },
                        "description": "response payload"
                      }
                    }
                  }
                },
                "example": {
                  "status": "OK",
                  "payload": [
                    {
                      "shipmentId": "0000966GDM",
                      "shipToAddress": {
                        "addressLine1": "120 Velocity Way.",
                        "city": "Shepherdsville",
                        "stateCode": "KY",
                        "countryCode": "US",
                        "postalCode": "40165"
                      },
                      "shipmentItems": [
                        {
                          "vendorSku": "WILL-SL969",
                          "itemQty": 10
                        }
                      ],
                      "expectedDeliveryDate": "2020-11-21T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/inbound-shipment-errors": {
      "get": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Get Inbound Shipment errors",
        "description": "After Sellers request to create an Inbound Order, WFS may return error responses with error codes. Type of errors: \n- \tSKUs not in WFS catalog: Sellers need to make sure all SKUs have already been converted and added to the WFS catalog\n- \tMissing required information; \n- \tInvalid Product ID (incorrect number of digits); \n- \tDuplicated Inbound Order ID: Inbound Order ID has already been used before\n- \tDuplicated Product IDs\nMost of these errors can be prevented with a robust API integration that does not allow the mistakes to be made. Seller should update the request based on the error message and re-submit the request.\nPlease note, once the Inbound Order is created successfully after the re-submission, historical errors under the same Inbound Order ID will be removed and no longer accessible. ",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2839"
        },
        "operationId": "getInboundOrderErrors",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "offset is the number of records you wish to skip before selecting records.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of Purchase Orders to be returned.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "10"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Unique ID identifying each shipment.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "headers": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer",
                          "description": "total number of POs for provided GET request.",
                          "format": "int32"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "provided limit value in the request",
                          "format": "int32"
                        },
                        "offset": {
                          "type": "integer",
                          "description": "provided offset value in the request.",
                          "format": "int32"
                        }
                      }
                    },
                    "payload": {
                      "type": "array",
                      "description": "response payload",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inboundOrderId": {
                            "type": "string",
                            "description": "Unique ID identifying inbound shipment requests"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "created date for the request",
                            "format": "date-time"
                          },
                          "returnAddress": {
                            "required": [
                              "addressLine1",
                              "city",
                              "countryCode",
                              "postalCode",
                              "stateCode"
                            ],
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "type": "string",
                                "description": "Address details"
                              },
                              "addressLine2": {
                                "type": "string",
                                "description": "Address details continuation"
                              },
                              "city": {
                                "type": "string",
                                "description": "City name"
                              },
                              "stateCode": {
                                "type": "string",
                                "description": "State Code"
                              },
                              "countryCode": {
                                "type": "string",
                                "description": "Country code"
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "Zip code"
                              }
                            },
                            "description": "Retrun address for seller"
                          },
                          "orderItems": {
                            "type": "array",
                            "description": "inbound shipment request line items",
                            "items": {
                              "required": [
                                "expectedDeliveryDate",
                                "innerPackQty",
                                "itemDesc",
                                "itemQty",
                                "productId",
                                "productType",
                                "sku",
                                "vendorPackQty"
                              ],
                              "type": "object",
                              "properties": {
                                "productId": {
                                  "type": "string",
                                  "description": "Unique ID identifying product"
                                },
                                "productType": {
                                  "type": "string",
                                  "description": "Supported product types are GTIN,UPC,EAN"
                                },
                                "sku": {
                                  "type": "string",
                                  "description": "Seller Item ID"
                                },
                                "itemDesc": {
                                  "type": "string",
                                  "description": "Item description"
                                },
                                "itemQty": {
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "Total number of sellable units",
                                  "format": "int32"
                                },
                                "vendorPackQty": {
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "Total number of cases",
                                  "format": "int32"
                                },
                                "innerPackQty": {
                                  "minimum": 1,
                                  "type": "integer",
                                  "description": "Total number of sellable units per case",
                                  "format": "int32"
                                },
                                "expectedDeliveryDate": {
                                  "type": "string",
                                  "description": "expected delivery date for shipment",
                                  "format": "date-time"
                                },
                                "itemNbr": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "dimensions": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "format": "float"
                                  }
                                },
                                "itemWeightQty": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "nonSortItem": {
                                  "type": "boolean"
                                },
                                "shipNode": {
                                  "type": "string"
                                }
                              },
                              "description": "inbound shipment request line items"
                            }
                          },
                          "errors": {
                            "type": "array",
                            "description": "Error in inbound shipment creation",
                            "items": {
                              "required": [
                                "code"
                              ],
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "info": {
                                  "type": "string"
                                },
                                "severity": {
                                  "type": "string",
                                  "enum": [
                                    "INFO",
                                    "WARN",
                                    "ERROR"
                                  ]
                                },
                                "category": {
                                  "type": "string",
                                  "enum": [
                                    "APPLICATION",
                                    "SYSTEM",
                                    "REQUEST",
                                    "DATA"
                                  ]
                                },
                                "causes": {
                                  "type": "array",
                                  "xml": {
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "field": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "xml": {
                                      "name": "Cause"
                                    }
                                  }
                                }
                              },
                              "xml": {
                                "name": "Error"
                              }
                            }
                          }
                        },
                        "description": "response payload"
                      }
                    }
                  }
                },
                "example": {
                  "headers": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 1
                  },
                  "payload": [
                    {
                      "inboundOrderId": "test-shipment-1",
                      "createdDate": "2020-10-19T01:06:24.207Z",
                      "returnAddress": {
                        "addressLine1": "address line 1",
                        "city": "Sunnyvale",
                        "stateCode": "CA",
                        "countryCode": "US",
                        "postalCode": "94087"
                      },
                      "orderItems": [
                        {
                          "productId": "7036848676 ",
                          "productType": "UPC",
                          "sku": "sku1",
                          "itemDesc": "product 1",
                          "itemQty": 20,
                          "vendorPackQty": 2,
                          "innerPackQty": 10,
                          "expectedDeliveryDate": "2020-10-27T16:00:00.000Z"
                        },
                        {
                          "productId": "703684867 ",
                          "productType": "UPC",
                          "sku": "sku2",
                          "itemDesc": "product 2",
                          "itemQty": 30,
                          "vendorPackQty": 3,
                          "innerPackQty": 30,
                          "expectedDeliveryDate": "2020-10-27T16:00:00.000Z"
                        }
                      ],
                      "errors": [
                        {
                          "code": "400.WSAAS.100",
                          "field": "orderItems[0].productId",
                          "description": "Product ID with Product Type UPC should be 12 digit",
                          "info": "Product ID with Product Type UPC should be 12 digit:703684867609 ",
                          "severity": "ERROR",
                          "category": "REQUEST"
                        },
                        {
                          "code": "400.WSAAS.100",
                          "field": "orderItems[1].productId",
                          "description": "Product ID with Product Type UPC should be 12 digit",
                          "info": "Product ID with Product Type UPC should be 12 digit:703684867661 ",
                          "severity": "ERROR",
                          "category": "REQUEST"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/inbound-shipment-items": {
      "get": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Get Inbound Shipment Items",
        "description": "After Sellers create an Inbound Order successfully, the response from Create Inbound Shipments API will tell whether the order can be sent in a single shipment to one WFS fulfillment center or needs to be split into multiple shipments to different fulfillment centers. \nTo retrieve the Shipment level info, please call the Get Inbound Shipments API and to get what needs to be in a specific shipment and SKU level receipt situation, please call the Get Inbound Shipment Items API",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2862"
        },
        "operationId": "getInboundShipmentItems",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "offset is the number of records you wish to skip before selecting records.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of Purchase Orders to be returned.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "10"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Unique ID identifying each shipment.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "headers": {
                      "type": "object",
                      "properties": {
                        "totalCount": {
                          "type": "integer",
                          "description": "total number of POs for provided GET request.",
                          "format": "int32"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "provided limit value in the request",
                          "format": "int32"
                        },
                        "offset": {
                          "type": "integer",
                          "description": "provided offset value in the request.",
                          "format": "int32"
                        }
                      }
                    },
                    "payload": {
                      "type": "array",
                      "description": "response payload",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inboundOrderId": {
                            "type": "string",
                            "description": "Unique ID identifying inbound shipment request"
                          },
                          "shipmentId": {
                            "type": "string",
                            "description": "Unique ID identifying each shipment"
                          },
                          "gtin": {
                            "type": "string",
                            "description": "Item barcode"
                          },
                          "sku": {
                            "type": "string",
                            "description": "Seller Item ID"
                          },
                          "itemDesc": {
                            "type": "string",
                            "description": "Item description"
                          },
                          "itemQty": {
                            "type": "integer",
                            "description": "Total number of sellable units",
                            "format": "int32"
                          },
                          "vendorPackQty": {
                            "type": "integer",
                            "description": "Total number of cases",
                            "format": "int32"
                          },
                          "innerPackQty": {
                            "type": "integer",
                            "description": "Total number of sellable units per case",
                            "format": "int32"
                          },
                          "receivedQty": {
                            "type": "integer",
                            "description": "Qty received in FC",
                            "format": "int32"
                          },
                          "damagedQty": {
                            "type": "integer",
                            "description": "Qty damaged while receiving in FC",
                            "format": "int32"
                          },
                          "fillRate": {
                            "type": "number",
                            "description": "Fill rate for this shipment item",
                            "format": "float"
                          },
                          "expectedDeliveryDate": {
                            "type": "string",
                            "description": "expected delivery date provided by seller",
                            "format": "date-time"
                          },
                          "updatedExpectedDeliveryDate": {
                            "type": "string",
                            "description": "update expected delivery date based on network capacity",
                            "format": "date-time"
                          },
                          "shipNodeName": {
                            "type": "string",
                            "description": "FC name"
                          }
                        },
                        "description": "response payload"
                      }
                    }
                  }
                },
                "example": {
                  "headers": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 4
                  },
                  "payload": [
                    {
                      "inboundOrderId": "1235113",
                      "shipmentId": "4846GDM",
                      "gtin": "00634482736852",
                      "sku": "ACDD-WZK73685",
                      "itemDesc": "Blue Jeans",
                      "itemQty": 10,
                      "vendorPackQty": 0,
                      "innerPackQty": 0,
                      "receivedQty": 0,
                      "damagedQty": 0,
                      "fillRate": 0,
                      "expectedDeliveryDate": "2020-09-24T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2020-09-24T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "1235113",
                      "shipmentId": "4846GDM",
                      "gtin": "00812040019191",
                      "sku": "KALA-WFS-KA-SWG-BL",
                      "itemDesc": "Google mini",
                      "itemQty": 16,
                      "vendorPackQty": 0,
                      "innerPackQty": 0,
                      "receivedQty": 0,
                      "damagedQty": 0,
                      "fillRate": 0,
                      "expectedDeliveryDate": "2020-09-24T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2020-09-24T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "1235113",
                      "shipmentId": "4846GDM",
                      "gtin": "00077540052578",
                      "sku": "NOTN-WFS-10480",
                      "itemDesc": "Blue Jeans",
                      "itemQty": 12,
                      "vendorPackQty": 0,
                      "innerPackQty": 0,
                      "receivedQty": 0,
                      "damagedQty": 0,
                      "fillRate": 0,
                      "expectedDeliveryDate": "2020-09-24T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2020-09-24T00:00:00.000Z"
                    },
                    {
                      "inboundOrderId": "1235113",
                      "shipmentId": "4846GDM",
                      "gtin": "00636047311207",
                      "sku": "GLHF-GL1304WMST",
                      "itemDesc": "Blue Jeans",
                      "itemQty": 14,
                      "vendorPackQty": 0,
                      "innerPackQty": 0,
                      "receivedQty": 0,
                      "damagedQty": 0,
                      "fillRate": 0,
                      "expectedDeliveryDate": "2020-09-24T00:00:00.000Z",
                      "updatedExpectedDeliveryDate": "2020-09-24T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/shipment-quantities": {
      "put": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Update Shipment Quantities ",
        "description": "Seller can modify the shipment quantity before the Shipment arrives at the WFS FCs. Seller cannot modify the shipment quantity when Shipment Status = Receiving in Progress, Closed, and Cancelled. \n Seller will need to provide new quantities for each SKU to update. Seller will only be able to add up to 6 units per SKU but can reduce to 0 units to remove any SKU from a shipment. Seller cannot change all SKUs’ quantity to 0 – they must cancel the entire Inbound Order. ",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2885"
        },
        "operationId": "updateShipmentQuantity",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "inboundOrderId",
                  "shipmentId"
                ],
                "type": "object",
                "properties": {
                  "inboundOrderId": {
                    "type": "string",
                    "description": "Unique ID identifying inbound shipment request"
                  },
                  "shipmentId": {
                    "type": "string",
                    "description": "Unique ID identifying inbound shipment"
                  },
                  "orderItems": {
                    "maxItems": 5000,
                    "minItems": 1,
                    "type": "array",
                    "description": "update shipment qty line items",
                    "xml": {
                      "wrapped": true
                    },
                    "items": {
                      "required": [
                        "sku",
                        "updatedShipmentQty"
                      ],
                      "type": "object",
                      "properties": {
                        "sku": {
                          "type": "string",
                          "description": "Seller Item ID"
                        },
                        "updatedShipmentQty": {
                          "minimum": 0,
                          "type": "integer",
                          "description": "updated quantity",
                          "format": "int32"
                        }
                      },
                      "description": "update shipment qty line items"
                    }
                  }
                }
              },
              "example": {
                "inboundOrderId": "123543",
                "shipmentId": "1234",
                "orderItems": [
                  {
                    "sku": "WILL-SL969",
                    "updatedShipmentQty": 11
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                },
                "example": {
                  "status": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/label/{shipmentId}": {
      "get": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Create Inbound Shipment label (deprecated)",
        "description": "The purpose of this service is to generate WFS shipping labels in pdf format for receiving purpose. Please note this is not a carrier label; these labels are required for the FC to identify the Inbound Order and Shipment ID they are receiving against. After requesting the shipping label, sellers must work with warehouse/ supplier to follow these steps before sending any Shipments to WFS FCs: \n1. \tPrint the WFS shipping label.\n2. \tFill out the FILL OUT section based on seller’s packing situation. For example, if a seller plans to ship 3 boxes to the WFS fulfillment center, print out 3 labels and fill out BOX 1 of 3, 2 of 3, and 3 of 3 in the FILL OUT section.\n3. \tCircle one shipment type in the CIRCLE ONE section. For example, if there are different SKUs in the box, circle MIXED SKUS in the CIRCLE ONE section.\n4. \tAffix the WFS shipping labels to the boxes/ pallets.\n",
        "operationId": "createInboundShipmentLabel",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "Unique ID identifying inbound shipment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/shipment-label": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Create Inbound Shipment label",
        "description": "The purpose of this service is to generate WFS Receiving Labels in various formats for receiving purposes. Please note this is not a carrier label; these labels are required for the FC to identify the Inbound Order and Shipment ID they are receiving against.Receiving labels are customizable: \n1. 3 size and format options are available to choose from through the LabelSize and LabelFormat fields:\n\t - 4 in. x 6 in. (PDF).\n\t - 4 in. x 3 1/3 in. (PDF).\n\t - 4 in. x 6 in. (ZPL).\n2. Provide the type of the label (box or pallet) in the LoadType field and the number of the labels needed in the Count field.\n3. Print the WFS receiving label.\n4. Affix the WFS receiving labels to the boxes/ pallets.\n\nIf none of the above optional inputs are provided, a blank 4 in. x 6 in. PDF format label will be generated. Sellers must work with the warehouse/supplier to provide the required details before sending any Shipments to WFS FCs:\n1. Print the WFS receiving label.\n2. Fill out the FILL OUT section based on the seller’s packing situation. For example, if a seller plans to ship 3 boxes to the WFS fulfillment center, print out 3 labels and fill out BOX 1 of 3, 2 of 3, and 3 of 3 in the FILL OUT section.\n3. Circle one shipment type in the CIRCLE ONE section. For example, if there are different SKUs in the box, circle MIXED SKUS in the CIRCLE ONE section.\n4. Affix the WFS receiving labels to the boxes/ pallets.\n",
        "operationId": "createInboundShipmentLabelV2",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "shipmentId"
                ],
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string"
                  },
                  "labelSize": {
                    "type": "string"
                  },
                  "labelFormat": {
                    "type": "string"
                  },
                  "loadTypes": {
                    "type": "array",
                    "xml": {
                      "wrapped": true
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "loadType": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/inbound-shipments/{inboundOrderId}": {
      "delete": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Cancel Inbound Shipment",
        "description": "The purpose of this service is to cancel an inbound order.\nSeller can cancel an Inbound Order before any of its Shipment arrives at the WFS FCs. Seller cannot cancel an Inbound Order if any of its Shipment’s status = Receiving in Progress, Closed, or Cancelled \nSeller can only cancel at the Inbound Order level, not the Shipment level: if an Inbound Order is cancelled, all Shipments on that order will be cancelled.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2946"
        },
        "operationId": "cancelShipment",
        "parameters": [
          {
            "name": "inboundOrderId",
            "in": "path",
            "description": "Unique ID identifying inbound shipment request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                },
                "example": {
                  "status": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/shipment-tracking": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Update Shipment Tracking",
        "description": "The purpose of this service is to capture tracking information from sellers.\nFor small parcel shipments, sellers must provide the tracking info including carrier name and tracking numbers. WFS will use the data to capture updated expected delivery date to adjust the fulfillment inbound capacity to avoid any receiving delays. \nSeller will also be able to view the updated expected delivery date through the Seller Center UI or calling the Get Inbound Shipment Items API.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2934"
        },
        "operationId": "updateShipmentTrackingDetails",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "carrierName",
                  "shipmentId"
                ],
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string"
                  },
                  "carrierName": {
                    "type": "string"
                  },
                  "trackingInfo": {
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array",
                    "xml": {
                      "wrapped": true
                    },
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "shipmentId": "12345",
                "carrierName": "UPS",
                "trackingInfo": [
                  "123",
                  "456-1",
                  "789-2"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                },
                "example": {
                  "status": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/v3/feeds": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Convert items for WFS",
        "description": "This API is used for converting existing Marketplace items to be WFS eligible. Once you’ve created a Marketplace item, each item must be converted to WFS by providing additional details that are not required during the item setup process. This item conversion process can be completed by uploading the Convert Spec excel file via Seller Center, or can be completed using the API documented here.\n\nDirections on how to convert your item to be eligible for Walmart Fulfillment Services can be found here: https://sellerhelp.walmart.com/s/guide?article=000009206\n\nAdditional details on hazmat item compliance requirements can be found here: https://sellerhelp.walmart.com/seller/s/guide?article=000009156\n\nTo download the schema, please refer to the Overview section",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2391"
        },
        "operationId": "convertItemForWfs",
        "parameters": [
          {
            "name": "feedType",
            "in": "query",
            "description": "Includes details of each entity in the feed. Do not set this parameter to true.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "OMNI_WFS"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Feed file to upload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "json1": {
                  "value": {
                    "SupplierItemFeedHeader": {
                      "subCategory": "baby_clothing",
                      "sellingChannel": "fbw",
                      "processMode": "REPLACE",
                      "locale": "en",
                      "version": "1.4",
                      "subset": "EXTERNAL"
                    },
                    "SupplierItem": [
                      {
                        "Visible": {
                          "Baby Clothing": {
                            "clothingSize": "S",
                            "color": [
                              "Pink"
                            ],
                            "countryOfOriginTextiles": "USA",
                            "smallPartsWarnings": [
                              "0 - No warning applicable"
                            ],
                            "mainImageUrl": "https://i5-qa.walmartimages.com/asr/549ecbe9-c874-475b-87d8-5e4cb19934ec.8f5d70e62bd0bb8abc6772c9ef1694e0.jpeg",
                            "prop65WarningText": "Warning",
                            "seasonYear": 2020,
                            "manufacturer": "Generic"
                          }
                        },
                        "Orderable": {
                          "productIdentifiers": {
                            "productId": "05923239836453",
                            "productIdType": "GTIN"
                          },
                          "batteryTechnologyType": "Does Not Contain a Battery",
                          "electronicsIndicator": "No",
                          "endDate": "2040-01-01T00:00:00.000Z",
                          "price": 10,
                          "chemicalAerosolPesticide": "No",
                          "sku": "05923239836453",
                          "stateRestrictions": [
                            {
                              "stateRestrictionsText": "None"
                            }
                          ],
                          "brand": "Goodlife",
                          "productName": "Goodlife Corona_merge_split_19",
                          "startDate": "2020-06-15T00:00:00.000Z"
                        },
                        "TradeItem": {
                          "countryOfOriginAssembly": [
                            "US - United States"
                          ],
                          "innerPack": {
                            "innerPackWidth": 2,
                            "innerPackHeight": 3,
                            "qtySellableItemsInnerPack": 1,
                            "innerPackGTIN": "05923239836453",
                            "innerPackWeight": 2,
                            "innerPackDepth": 1
                          },
                          "sku": "05923239836453",
                          "orderableGTIN": "05923239836453"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "json1": {
                  "value": {
                    "SupplierItemFeedHeader": {
                      "subCategory": "baby_clothing",
                      "sellingChannel": "fbw",
                      "processMode": "REPLACE",
                      "locale": "en",
                      "version": "1.4",
                      "subset": "EXTERNAL"
                    },
                    "SupplierItem": [
                      {
                        "Visible": {
                          "Baby Clothing": {
                            "clothingSize": "S",
                            "color": [
                              "Pink"
                            ],
                            "countryOfOriginTextiles": "USA",
                            "smallPartsWarnings": [
                              "0 - No warning applicable"
                            ],
                            "mainImageUrl": "https://i5-qa.walmartimages.com/asr/549ecbe9-c874-475b-87d8-5e4cb19934ec.8f5d70e62bd0bb8abc6772c9ef1694e0.jpeg",
                            "prop65WarningText": "Warning",
                            "seasonYear": 2020,
                            "manufacturer": "Generic"
                          }
                        },
                        "Orderable": {
                          "productIdentifiers": {
                            "productId": "05923239836453",
                            "productIdType": "GTIN"
                          },
                          "batteryTechnologyType": "Does Not Contain a Battery",
                          "electronicsIndicator": "No",
                          "endDate": "2040-01-01T00:00:00.000Z",
                          "price": 10,
                          "chemicalAerosolPesticide": "No",
                          "sku": "05923239836453",
                          "stateRestrictions": [
                            {
                              "stateRestrictionsText": "None"
                            }
                          ],
                          "brand": "Goodlife",
                          "productName": "Goodlife Corona_merge_split_19",
                          "startDate": "2020-06-15T00:00:00.000Z"
                        },
                        "TradeItem": {
                          "countryOfOriginAssembly": [
                            "US - United States"
                          ],
                          "innerPack": {
                            "innerPackWidth": 2,
                            "innerPackHeight": 3,
                            "qtySellableItemsInnerPack": 1,
                            "innerPackGTIN": "05923239836453",
                            "innerPackWeight": 2,
                            "innerPackDepth": 1
                          },
                          "sku": "05923239836453",
                          "orderableGTIN": "05923239836453"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feedId": {
                      "type": "string",
                      "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
                    },
                    "additionalAttributes": {
                      "type": "object",
                      "nullable": true
                    },
                    "errors": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "feedId": "FFE538D9B25A4000AD2A067ACEDCF4C4@AUoBAQA"
                }
              }
            }
          }
        }
      }
    },
    "/v3/items/onhold/search": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Hazmat Items On hold",
        "description": "Use this API to see a list of items that are on hold for hazmat compliance review, including items with an In Review, Action Needed, and Prohibited status. Also use this API to review your Action Needed error descriptions and understand how to correct them for further assessment.",
        "operationId": "wercsFeedback",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Only supported Media Type : application/json",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| sku | An arbitrary alphanumeric unique ID, seller-specified, identifying each item | string\n| gtin | Specifies a Global Trade Item Number (GTIN) search. GTIN must be 14 digits. | string",
                        "enum": [
                          "sku",
                          "gtin"
                        ]
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| status | Item status | string",
                          "enum": [
                            "status"
                          ]
                        },
                        "op": {
                          "type": "string",
                          "enum": [
                            "equals"
                          ]
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "PROHIBITED",
                              "IN_REVIEW",
                              "ACTION_NEEDED"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "sort": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| createdAt | when the item is last submitted/updated by Seller | string\n| updatedAt | when the item is last updated by Seller/Walmart | string |",
                        "enum": [
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "order": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ]
                      }
                    }
                  }
                }
              },
              "example": {
                "query": {
                  "field": "gtin",
                  "value": "06154035330299"
                },
                "filters": [
                  {
                    "field": "status",
                    "op": "equals",
                    "values": [
                      "PROHIBITED",
                      "IN_REVIEW",
                      "ACTION_NEEDED"
                    ]
                  }
                ],
                "sort": {
                  "field": "updatedAt",
                  "order": "DESC"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/carrier-rate-quotes": {
      "get": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Get Carrier Rate Quote",
        "description": "The purpose of this service is for seller to void the carrier shipping charges, within 24 hours after the estimated carrier charges have been accepted by the seller.",
        "operationId": "getCarrierRateQuote",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "Unique ID identifying each shipment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "path",
            "description": "Shipment type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shipmentId": {
                      "type": "string"
                    },
                    "quoteId": {
                      "type": "string"
                    },
                    "estimatedDeliveryDateTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "quoteCreationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "carrier": {
                      "type": "object",
                      "properties": {
                        "carrierId": {
                          "type": "string"
                        },
                        "carrierName": {
                          "type": "string"
                        }
                      }
                    },
                    "rateQuote": {
                      "type": "object",
                      "properties": {
                        "quoteId": {
                          "type": "string"
                        },
                        "estimatedDeliveryDateTime": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "carrier": {
                          "type": "object",
                          "properties": {
                            "carrierId": {
                              "type": "string"
                            },
                            "carrierName": {
                              "type": "string"
                            }
                          }
                        },
                        "currency": {
                          "type": "string"
                        },
                        "discountCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "netCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "surchargeType": {
                          "type": "string"
                        },
                        "surchargeValue": {
                          "type": "string"
                        },
                        "totalBillingWeight": {
                          "type": "number",
                          "format": "float"
                        },
                        "status": {
                          "type": "string"
                        },
                        "transitDays": {
                          "type": "string"
                        },
                        "effectiveDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expiryDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "mode": {
                          "type": "string"
                        },
                        "sellerFreightClassCode": {
                          "type": "string"
                        },
                        "freightCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "fuelCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "totalWeight": {
                          "type": "number",
                          "format": "float"
                        },
                        "totalVolume": {
                          "type": "number",
                          "format": "float"
                        },
                        "equipmentTypeCode": {
                          "type": "string"
                        },
                        "serviceCode": {
                          "type": "string"
                        },
                        "numberOfPallets": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "nominalCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "assessorialCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "serviceCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "minimumCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "declaredValue": {
                          "type": "string"
                        },
                        "mixedSKUs": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "singleSKUs": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "freightReadyDate": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "shipmentPackages": {
                      "type": "array",
                      "items": {
                        "required": [
                          "height",
                          "length",
                          "lengthUOM",
                          "packageSequenceNumber",
                          "weight",
                          "weightUOM",
                          "width"
                        ],
                        "type": "object",
                        "properties": {
                          "packageSequenceNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "weight": {
                            "minimum": -1,
                            "type": "number",
                            "format": "float"
                          },
                          "weightUOM": {
                            "type": "string"
                          },
                          "length": {
                            "minimum": -1,
                            "type": "number",
                            "format": "float"
                          },
                          "height": {
                            "minimum": -1,
                            "type": "number",
                            "format": "float"
                          },
                          "width": {
                            "minimum": -1,
                            "type": "number",
                            "format": "float"
                          },
                          "lengthUOM": {
                            "type": "string"
                          },
                          "labelInformation": {
                            "type": "object",
                            "properties": {
                              "labelData": {
                                "type": "string"
                              },
                              "labelFormat": {
                                "type": "string"
                              },
                              "trackingCode": {
                                "type": "string"
                              },
                              "referenceTrackingCode": {
                                "type": "string"
                              },
                              "epTrackerId": {
                                "type": "string"
                              },
                              "shipmentId": {
                                "type": "string"
                              },
                              "packageAsn": {
                                "type": "string"
                              },
                              "masterTrackingCode": {
                                "type": "string"
                              },
                              "master": {
                                "type": "boolean"
                              }
                            }
                          },
                          "billingWeight": {
                            "type": "number",
                            "format": "float"
                          },
                          "netCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "nominalCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "assessorialCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "serviceCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "packageType": {
                            "type": "string"
                          },
                          "noOfPackages": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "stackable": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "originLocation": {
                      "required": [
                        "address",
                        "locationName"
                      ],
                      "type": "object",
                      "properties": {
                        "locationName": {
                          "type": "string"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "city",
                            "countryCode",
                            "postalCode",
                            "stateCode"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string"
                            },
                            "addressLine2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "stateCode": {
                              "type": "string"
                            },
                            "countryCode": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            }
                          }
                        },
                        "locationId": {
                          "type": "string"
                        }
                      }
                    },
                    "destinationLocation": {
                      "required": [
                        "address",
                        "locationName"
                      ],
                      "type": "object",
                      "properties": {
                        "locationName": {
                          "type": "string"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "city",
                            "countryCode",
                            "postalCode",
                            "stateCode"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string"
                            },
                            "addressLine2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "stateCode": {
                              "type": "string"
                            },
                            "countryCode": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            }
                          }
                        },
                        "locationId": {
                          "type": "string"
                        }
                      }
                    },
                    "returnLocation": {
                      "required": [
                        "address",
                        "locationName"
                      ],
                      "type": "object",
                      "properties": {
                        "locationName": {
                          "type": "string"
                        },
                        "address": {
                          "required": [
                            "addressLine1",
                            "city",
                            "countryCode",
                            "postalCode",
                            "stateCode"
                          ],
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string"
                            },
                            "addressLine2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "stateCode": {
                              "type": "string"
                            },
                            "countryCode": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Create Carrier Rate Quote",
        "description": "The purpose of this service is to get the carrier rate quotes for WFS Preferred Carrier Program - FedEx parcel solution, when inbounding seller items from seller pickup point to Walmart fulfillment centers.\n\nFor the shipments sent by FedEx small parcel, you can ship packages up to 150 lb, up to 108\" in length, and 165\" in length plus girth. (Girth is 2x width + 2x height.). You can ship up to 200 packages per shipment.",
        "operationId": "createCarrierRateQuotes",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customer",
                  "destinationLocation",
                  "mode",
                  "originLocation",
                  "returnLocation",
                  "shipmentId",
                  "shipmentPackages",
                  "shipmentSource"
                ],
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string"
                  },
                  "shipmentSource": {
                    "type": "string"
                  },
                  "pickupFromDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "pickupToDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deliveryFromDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deliveryToDateTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customer": {
                    "required": [
                      "customerId",
                      "customerName"
                    ],
                    "type": "object",
                    "properties": {
                      "customerId": {
                        "type": "string"
                      },
                      "customerName": {
                        "type": "string"
                      }
                    }
                  },
                  "originLocation": {
                    "required": [
                      "address",
                      "locationName"
                    ],
                    "type": "object",
                    "properties": {
                      "locationName": {
                        "type": "string"
                      },
                      "address": {
                        "required": [
                          "addressLine1",
                          "city",
                          "countryCode",
                          "postalCode",
                          "stateCode"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "type": "string"
                          },
                          "addressLine2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "stateCode": {
                            "type": "string"
                          },
                          "countryCode": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      },
                      "locationId": {
                        "type": "string"
                      }
                    }
                  },
                  "destinationLocation": {
                    "required": [
                      "address",
                      "locationName"
                    ],
                    "type": "object",
                    "properties": {
                      "locationName": {
                        "type": "string"
                      },
                      "address": {
                        "required": [
                          "addressLine1",
                          "city",
                          "countryCode",
                          "postalCode",
                          "stateCode"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "type": "string"
                          },
                          "addressLine2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "stateCode": {
                            "type": "string"
                          },
                          "countryCode": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      },
                      "locationId": {
                        "type": "string"
                      }
                    }
                  },
                  "returnLocation": {
                    "required": [
                      "address",
                      "locationName"
                    ],
                    "type": "object",
                    "properties": {
                      "locationName": {
                        "type": "string"
                      },
                      "address": {
                        "required": [
                          "addressLine1",
                          "city",
                          "countryCode",
                          "postalCode",
                          "stateCode"
                        ],
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "type": "string"
                          },
                          "addressLine2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "stateCode": {
                            "type": "string"
                          },
                          "countryCode": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "shipmentPackages": {
                    "maxItems": 5000,
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "required": [
                        "height",
                        "length",
                        "lengthUOM",
                        "packageSequenceNumber",
                        "weight",
                        "weightUOM",
                        "width"
                      ],
                      "type": "object",
                      "properties": {
                        "packageSequenceNumber": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "weight": {
                          "minimum": -1,
                          "type": "number",
                          "format": "float"
                        },
                        "weightUOM": {
                          "type": "string"
                        },
                        "length": {
                          "minimum": -1,
                          "type": "number",
                          "format": "float"
                        },
                        "height": {
                          "minimum": -1,
                          "type": "number",
                          "format": "float"
                        },
                        "width": {
                          "minimum": -1,
                          "type": "number",
                          "format": "float"
                        },
                        "lengthUOM": {
                          "type": "string"
                        },
                        "labelInformation": {
                          "type": "object",
                          "properties": {
                            "labelData": {
                              "type": "string"
                            },
                            "labelFormat": {
                              "type": "string"
                            },
                            "trackingCode": {
                              "type": "string"
                            },
                            "referenceTrackingCode": {
                              "type": "string"
                            },
                            "epTrackerId": {
                              "type": "string"
                            },
                            "shipmentId": {
                              "type": "string"
                            },
                            "packageAsn": {
                              "type": "string"
                            },
                            "masterTrackingCode": {
                              "type": "string"
                            },
                            "master": {
                              "type": "boolean"
                            }
                          }
                        },
                        "billingWeight": {
                          "type": "number",
                          "format": "float"
                        },
                        "netCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "nominalCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "assessorialCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "serviceCharge": {
                          "type": "number",
                          "format": "float"
                        },
                        "packageType": {
                          "type": "string"
                        },
                        "noOfPackages": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "stackable": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "mode": {
                    "type": "string",
                    "default": "PARCEL"
                  },
                  "freightClass": {
                    "type": "string"
                  },
                  "declaredValue": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "loadTypes": {
                    "type": "array",
                    "items": {
                      "required": [
                        "count",
                        "loadType"
                      ],
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "string"
                        },
                        "loadType": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shipmentId": {
                      "type": "string"
                    },
                    "shipmentNumber": {
                      "type": "string"
                    },
                    "rateQuotes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "quoteId": {
                            "type": "string"
                          },
                          "estimatedDeliveryDateTime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "carrier": {
                            "type": "object",
                            "properties": {
                              "carrierId": {
                                "type": "string"
                              },
                              "carrierName": {
                                "type": "string"
                              }
                            }
                          },
                          "currency": {
                            "type": "string"
                          },
                          "discountCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "netCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "surchargeType": {
                            "type": "string"
                          },
                          "surchargeValue": {
                            "type": "string"
                          },
                          "totalBillingWeight": {
                            "type": "number",
                            "format": "float"
                          },
                          "status": {
                            "type": "string"
                          },
                          "transitDays": {
                            "type": "string"
                          },
                          "effectiveDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "expiryDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "mode": {
                            "type": "string"
                          },
                          "sellerFreightClassCode": {
                            "type": "string"
                          },
                          "freightCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "fuelCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "totalWeight": {
                            "type": "number",
                            "format": "float"
                          },
                          "totalVolume": {
                            "type": "number",
                            "format": "float"
                          },
                          "equipmentTypeCode": {
                            "type": "string"
                          },
                          "serviceCode": {
                            "type": "string"
                          },
                          "numberOfPallets": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "nominalCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "assessorialCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "serviceCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "minimumCharge": {
                            "type": "number",
                            "format": "float"
                          },
                          "declaredValue": {
                            "type": "string"
                          },
                          "mixedSKUs": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "singleSKUs": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "freightReadyDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/carrier-rate-quote/confirm": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Confirm Carrier Rate Quote",
        "description": "The purpose of this service is for seller to confirm and accept the estimated carrier shipping charges, when choosing to use WFS Preferred Carrier Program - FedEx parcel to inbound inventory to Walmart fulfillment centers.",
        "operationId": "confirmCarrierRateQuote",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "description": "Request fields",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "shipmentId"
                ],
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/carrier-rate-quote/{shipmentId}": {
      "delete": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Cancel Carrier Rate Quote",
        "description": "The purpose of this service is for seller to void the carrier shipping charges, within 24 hours after the estimated carrier charges have been accepted by the seller.",
        "operationId": "voidCarrierRateQuote",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "Unique ID identifying each shipment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/fulfillment/carrier-label/{shipmentId}": {
      "post": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Print Carrier Label",
        "description": "The purpose of this service is for sellers to print carrier shipping label. \n\nTo print carrier shipping label, please first specify a Ship Date. Note, carrier allows to select a ship date 10 days in advance.",
        "operationId": "printCarrierLabel",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "Unique ID identifying each shipment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "shipDate"
                ],
                "type": "object",
                "properties": {
                  "shipDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/pdf": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NO_CONTENT",
                        "PARTIAL",
                        "MOVED_PERMANENT",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "REQUEST_ENTITY_TOO_LARGE",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "UNPROCESSABLE_ENTITY",
                        "FAIL",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT"
                      ]
                    },
                    "header": {
                      "type": "object",
                      "properties": {
                        "headerAttributes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "xml": {
                        "name": "ServiceHeader"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "xml": {
                        "wrapped": true
                      },
                      "items": {
                        "required": [
                          "code"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "INFO",
                              "WARN",
                              "ERROR"
                            ]
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "APPLICATION",
                              "SYSTEM",
                              "REQUEST",
                              "DATA"
                            ]
                          },
                          "causes": {
                            "type": "array",
                            "xml": {
                              "wrapped": true
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "field": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "xml": {
                                "name": "Cause"
                              }
                            }
                          }
                        },
                        "xml": {
                          "name": "Error"
                        }
                      }
                    },
                    "payload": {
                      "type": "object"
                    }
                  },
                  "xml": {
                    "name": "ServiceResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/report/wfs/getInventoryHealthReport": {
      "get": {
        "tags": [
          "Fulfillment"
        ],
        "summary": "Get WFS Inventory Health Report",
        "description": "Returns all the information associated with Seller's items that are set up on Walmart Fulfillment Services (WFS) platform.",
        "externalDocs": {
          "description": "View Guide",
          "url": "/doc/us/mp/us-mp-fulfillment/#2935"
        },
        "operationId": "getInventoryHealthReport",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic YzcyOTFjNmItNzI5MC00...."
          },
          {
            "in": "header",
            "name": "WM_SEC.ACCESS_TOKEN",
            "description": "The access token retrieved in the Token API call",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
          },
          {
            "in": "header",
            "name": "WM_CONSUMER.CHANNEL.TYPE",
            "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "WM_QOS.CORRELATION_ID",
            "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
          },
          {
            "in": "header",
            "name": "WM_SVC.NAME",
            "description": "Walmart Service Name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Walmart Service Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "description": "The data will be returned in a .csv file in your folder.\nThe response to a successful call includes a header as an attachment called Content-Disposition.\nThe Content-Disposition header contains the name of the report. As an example, attachment: filename=WFSInventoryHealthReport_2021-07-15T06_42_13.766Z.csv. The title includes the timestamp when the file was generated.\nThe attachment contains the report in a csv format.\nThe java code example demonstrates the use of the header and the body when processing the response\nThe report is regenerated periodically. We recommend that you not retrieve the report more frequently than once every one hour."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InboundShipmentCreateResponseWrapper": {
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string",
            "description": "Unique ID identifying each shipment"
          },
          "shipToAddress": {
            "type": "object",
            "properties": {
              "fcName": {
                "type": "string",
                "description": "Facility name"
              },
              "addressLine1": {
                "type": "string",
                "description": "Address details "
              },
              "addressLine2": {
                "type": "string",
                "description": "Address details continuation"
              },
              "city": {
                "type": "string",
                "description": "City name"
              },
              "stateCode": {
                "type": "string",
                "description": "State code"
              },
              "countryCode": {
                "type": "string",
                "description": "Country code"
              },
              "postalCode": {
                "type": "string",
                "description": "Zip code"
              }
            },
            "description": "The address to which sellers need to inbound items"
          },
          "shipmentItems": {
            "type": "array",
            "description": "The items which needs to be send in the shipment",
            "items": {
              "type": "object",
              "properties": {
                "vendorSku": {
                  "type": "string",
                  "description": "Seller Item ID"
                },
                "itemQty": {
                  "type": "integer",
                  "description": "Total number of sellable units",
                  "format": "int32"
                }
              },
              "description": "The items which needs to be send in the shipment"
            }
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "expected delivery date for inbounding shipment. Can be different from provided in the rquest based on network capacity",
            "format": "date-time"
          }
        },
        "description": "response payload"
      },
      "InboundShipmentCreateResponseWrapperDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "description": "response payload",
            "items": {
              "type": "object",
              "properties": {
                "shipmentId": {
                  "type": "string",
                  "description": "Unique ID identifying each shipment"
                },
                "shipToAddress": {
                  "type": "object",
                  "properties": {
                    "fcName": {
                      "type": "string",
                      "description": "Facility name"
                    },
                    "addressLine1": {
                      "type": "string",
                      "description": "Address details "
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address details continuation"
                    },
                    "city": {
                      "type": "string",
                      "description": "City name"
                    },
                    "stateCode": {
                      "type": "string",
                      "description": "State code"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "Country code"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip code"
                    }
                  },
                  "description": "The address to which sellers need to inbound items"
                },
                "shipmentItems": {
                  "type": "array",
                  "description": "The items which needs to be send in the shipment",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vendorSku": {
                        "type": "string",
                        "description": "Seller Item ID"
                      },
                      "itemQty": {
                        "type": "integer",
                        "description": "Total number of sellable units",
                        "format": "int32"
                      }
                    },
                    "description": "The items which needs to be send in the shipment"
                  }
                },
                "expectedDeliveryDate": {
                  "type": "string",
                  "description": "expected delivery date for inbounding shipment. Can be different from provided in the rquest based on network capacity",
                  "format": "date-time"
                }
              },
              "description": "response payload"
            }
          }
        }
      },
      "ShipToAddress": {
        "type": "object",
        "properties": {
          "fcName": {
            "type": "string",
            "description": "Facility name"
          },
          "addressLine1": {
            "type": "string",
            "description": "Address details "
          },
          "addressLine2": {
            "type": "string",
            "description": "Address details continuation"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "stateCode": {
            "type": "string",
            "description": "State code"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip code"
          }
        },
        "description": "The address to which sellers need to inbound items"
      },
      "ShipmentItem": {
        "type": "object",
        "properties": {
          "vendorSku": {
            "type": "string",
            "description": "Seller Item ID"
          },
          "itemQty": {
            "type": "integer",
            "description": "Total number of sellable units",
            "format": "int32"
          }
        },
        "description": "The items which needs to be send in the shipment"
      },
      "InboundShipmentRequestWrapper": {
        "required": [
          "inboundOrderId",
          "returnAddress"
        ],
        "type": "object",
        "properties": {
          "inboundOrderId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Unique ID identifying inbound shipment request"
          },
          "returnAddress": {
            "required": [
              "addressLine1",
              "city",
              "countryCode",
              "postalCode",
              "stateCode"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string",
                "description": "Address details"
              },
              "addressLine2": {
                "type": "string",
                "description": "Address details continuation"
              },
              "city": {
                "type": "string",
                "description": "City name"
              },
              "stateCode": {
                "type": "string",
                "description": "State Code"
              },
              "countryCode": {
                "type": "string",
                "description": "Country code"
              },
              "postalCode": {
                "type": "string",
                "description": "Zip code"
              }
            },
            "description": "Retrun address for seller"
          },
          "orderItems": {
            "maxItems": 5000,
            "minItems": 1,
            "type": "array",
            "description": "inbound shipment request line items",
            "xml": {
              "wrapped": true
            },
            "items": {
              "required": [
                "expectedDeliveryDate",
                "innerPackQty",
                "itemDesc",
                "itemQty",
                "productId",
                "productType",
                "sku",
                "vendorPackQty"
              ],
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "Unique ID identifying product"
                },
                "productType": {
                  "type": "string",
                  "description": "Supported product types are GTIN,UPC,EAN"
                },
                "sku": {
                  "type": "string",
                  "description": "Seller Item ID"
                },
                "itemDesc": {
                  "type": "string",
                  "description": "Item description"
                },
                "itemQty": {
                  "minimum": 1,
                  "type": "integer",
                  "description": "Total number of sellable units",
                  "format": "int32"
                },
                "vendorPackQty": {
                  "minimum": 1,
                  "type": "integer",
                  "description": "Total number of cases",
                  "format": "int32"
                },
                "innerPackQty": {
                  "minimum": 1,
                  "type": "integer",
                  "description": "Total number of sellable units per case",
                  "format": "int32"
                },
                "expectedDeliveryDate": {
                  "type": "string",
                  "description": "expected delivery date for shipment",
                  "format": "date-time"
                },
                "itemNbr": {
                  "type": "integer",
                  "format": "int32"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "itemWeightQty": {
                  "type": "number",
                  "format": "float"
                },
                "nonSortItem": {
                  "type": "boolean"
                },
                "shipNode": {
                  "type": "string"
                }
              },
              "description": "inbound shipment request line items"
            }
          }
        }
      },
      "OrderItem": {
        "required": [
          "expectedDeliveryDate",
          "innerPackQty",
          "itemDesc",
          "itemQty",
          "productId",
          "productType",
          "sku",
          "vendorPackQty"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Unique ID identifying product"
          },
          "productType": {
            "type": "string",
            "description": "Supported product types are GTIN,UPC,EAN"
          },
          "sku": {
            "type": "string",
            "description": "Seller Item ID"
          },
          "itemDesc": {
            "type": "string",
            "description": "Item description"
          },
          "itemQty": {
            "minimum": 1,
            "type": "integer",
            "description": "Total number of sellable units",
            "format": "int32"
          },
          "vendorPackQty": {
            "minimum": 1,
            "type": "integer",
            "description": "Total number of cases",
            "format": "int32"
          },
          "innerPackQty": {
            "minimum": 1,
            "type": "integer",
            "description": "Total number of sellable units per case",
            "format": "int32"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "expected delivery date for shipment",
            "format": "date-time"
          },
          "itemNbr": {
            "type": "integer",
            "format": "int32"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "itemWeightQty": {
            "type": "number",
            "format": "float"
          },
          "nonSortItem": {
            "type": "boolean"
          },
          "shipNode": {
            "type": "string"
          }
        },
        "description": "inbound shipment request line items"
      },
      "ReturnAddress": {
        "required": [
          "addressLine1",
          "city",
          "countryCode",
          "postalCode",
          "stateCode"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Address details"
          },
          "addressLine2": {
            "type": "string",
            "description": "Address details continuation"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "stateCode": {
            "type": "string",
            "description": "State Code"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip code"
          }
        },
        "description": "Retrun address for seller"
      },
      "Cause": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Cause"
        }
      },
      "Error": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "INFO",
              "WARN",
              "ERROR"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "SYSTEM",
              "REQUEST",
              "DATA"
            ]
          },
          "causes": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "Cause"
              }
            }
          }
        },
        "xml": {
          "name": "Error"
        }
      },
      "Headers": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "total number of POs for provided GET request.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "provided limit value in the request",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "provided offset value in the request.",
            "format": "int32"
          }
        }
      },
      "InboundShipmentErrorResponseWrapperDTO": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "integer",
                "description": "total number of POs for provided GET request.",
                "format": "int32"
              },
              "limit": {
                "type": "integer",
                "description": "provided limit value in the request",
                "format": "int32"
              },
              "offset": {
                "type": "integer",
                "description": "provided offset value in the request.",
                "format": "int32"
              }
            }
          },
          "payload": {
            "type": "array",
            "description": "response payload",
            "items": {
              "type": "object",
              "properties": {
                "inboundOrderId": {
                  "type": "string",
                  "description": "Unique ID identifying inbound shipment requests"
                },
                "createdDate": {
                  "type": "string",
                  "description": "created date for the request",
                  "format": "date-time"
                },
                "returnAddress": {
                  "required": [
                    "addressLine1",
                    "city",
                    "countryCode",
                    "postalCode",
                    "stateCode"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string",
                      "description": "Address details"
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address details continuation"
                    },
                    "city": {
                      "type": "string",
                      "description": "City name"
                    },
                    "stateCode": {
                      "type": "string",
                      "description": "State Code"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "Country code"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip code"
                    }
                  },
                  "description": "Retrun address for seller"
                },
                "orderItems": {
                  "type": "array",
                  "description": "inbound shipment request line items",
                  "items": {
                    "required": [
                      "expectedDeliveryDate",
                      "innerPackQty",
                      "itemDesc",
                      "itemQty",
                      "productId",
                      "productType",
                      "sku",
                      "vendorPackQty"
                    ],
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "string",
                        "description": "Unique ID identifying product"
                      },
                      "productType": {
                        "type": "string",
                        "description": "Supported product types are GTIN,UPC,EAN"
                      },
                      "sku": {
                        "type": "string",
                        "description": "Seller Item ID"
                      },
                      "itemDesc": {
                        "type": "string",
                        "description": "Item description"
                      },
                      "itemQty": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Total number of sellable units",
                        "format": "int32"
                      },
                      "vendorPackQty": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Total number of cases",
                        "format": "int32"
                      },
                      "innerPackQty": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Total number of sellable units per case",
                        "format": "int32"
                      },
                      "expectedDeliveryDate": {
                        "type": "string",
                        "description": "expected delivery date for shipment",
                        "format": "date-time"
                      },
                      "itemNbr": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "dimensions": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        }
                      },
                      "itemWeightQty": {
                        "type": "number",
                        "format": "float"
                      },
                      "nonSortItem": {
                        "type": "boolean"
                      },
                      "shipNode": {
                        "type": "string"
                      }
                    },
                    "description": "inbound shipment request line items"
                  }
                },
                "errors": {
                  "type": "array",
                  "description": "Error in inbound shipment creation",
                  "items": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "info": {
                        "type": "string"
                      },
                      "severity": {
                        "type": "string",
                        "enum": [
                          "INFO",
                          "WARN",
                          "ERROR"
                        ]
                      },
                      "category": {
                        "type": "string",
                        "enum": [
                          "APPLICATION",
                          "SYSTEM",
                          "REQUEST",
                          "DATA"
                        ]
                      },
                      "causes": {
                        "type": "array",
                        "xml": {
                          "wrapped": true
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          },
                          "xml": {
                            "name": "Cause"
                          }
                        }
                      }
                    },
                    "xml": {
                      "name": "Error"
                    }
                  }
                }
              },
              "description": "response payload"
            }
          }
        }
      },
      "InboundShipmentErrorsResponseWrapper": {
        "type": "object",
        "properties": {
          "inboundOrderId": {
            "type": "string",
            "description": "Unique ID identifying inbound shipment requests"
          },
          "createdDate": {
            "type": "string",
            "description": "created date for the request",
            "format": "date-time"
          },
          "returnAddress": {
            "required": [
              "addressLine1",
              "city",
              "countryCode",
              "postalCode",
              "stateCode"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string",
                "description": "Address details"
              },
              "addressLine2": {
                "type": "string",
                "description": "Address details continuation"
              },
              "city": {
                "type": "string",
                "description": "City name"
              },
              "stateCode": {
                "type": "string",
                "description": "State Code"
              },
              "countryCode": {
                "type": "string",
                "description": "Country code"
              },
              "postalCode": {
                "type": "string",
                "description": "Zip code"
              }
            },
            "description": "Retrun address for seller"
          },
          "orderItems": {
            "type": "array",
            "description": "inbound shipment request line items",
            "items": {
              "required": [
                "expectedDeliveryDate",
                "innerPackQty",
                "itemDesc",
                "itemQty",
                "productId",
                "productType",
                "sku",
                "vendorPackQty"
              ],
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "Unique ID identifying product"
                },
                "productType": {
                  "type": "string",
                  "description": "Supported product types are GTIN,UPC,EAN"
                },
                "sku": {
                  "type": "string",
                  "description": "Seller Item ID"
                },
                "itemDesc": {
                  "type": "string",
                  "description": "Item description"
                },
                "itemQty": {
                  "minimum": 1,
                  "type": "integer",
                  "description": "Total number of sellable units",
                  "format": "int32"
                },
                "vendorPackQty": {
                  "minimum": 1,
                  "type": "integer",
                  "description": "Total number of cases",
                  "format": "int32"
                },
                "innerPackQty": {
                  "minimum": 1,
                  "type": "integer",
                  "description": "Total number of sellable units per case",
                  "format": "int32"
                },
                "expectedDeliveryDate": {
                  "type": "string",
                  "description": "expected delivery date for shipment",
                  "format": "date-time"
                },
                "itemNbr": {
                  "type": "integer",
                  "format": "int32"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "itemWeightQty": {
                  "type": "number",
                  "format": "float"
                },
                "nonSortItem": {
                  "type": "boolean"
                },
                "shipNode": {
                  "type": "string"
                }
              },
              "description": "inbound shipment request line items"
            }
          },
          "errors": {
            "type": "array",
            "description": "Error in inbound shipment creation",
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                }
              },
              "xml": {
                "name": "Error"
              }
            }
          }
        },
        "description": "response payload"
      },
      "GetShipmentPlanDTO": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "integer",
                "description": "total number of POs for provided GET request.",
                "format": "int32"
              },
              "limit": {
                "type": "integer",
                "description": "provided limit value in the request",
                "format": "int32"
              },
              "offset": {
                "type": "integer",
                "description": "provided offset value in the request.",
                "format": "int32"
              }
            }
          },
          "payload": {
            "type": "array",
            "description": "response payload",
            "items": {
              "type": "object",
              "properties": {
                "inboundOrderId": {
                  "type": "string",
                  "description": "Unique ID identifying inbound shipment request"
                },
                "shipmentId": {
                  "type": "string",
                  "description": "Unique ID identifying inbound shipment"
                },
                "shipToAddress": {
                  "type": "object",
                  "properties": {
                    "fcName": {
                      "type": "string",
                      "description": "Facility name"
                    },
                    "addressLine1": {
                      "type": "string",
                      "description": "Address details "
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address details continuation"
                    },
                    "city": {
                      "type": "string",
                      "description": "City name"
                    },
                    "stateCode": {
                      "type": "string",
                      "description": "State code"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "Country code"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip code"
                    }
                  },
                  "description": "The address to which sellers need to inbound items"
                },
                "returnAddress": {
                  "required": [
                    "addressLine1",
                    "city",
                    "countryCode",
                    "postalCode",
                    "stateCode"
                  ],
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string",
                      "description": "Address details"
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address details continuation"
                    },
                    "city": {
                      "type": "string",
                      "description": "City name"
                    },
                    "stateCode": {
                      "type": "string",
                      "description": "State Code"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "Country code"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip code"
                    }
                  },
                  "description": "Retrun address for seller"
                },
                "status": {
                  "type": "string",
                  "description": "Current status of the shipment"
                },
                "createdDate": {
                  "type": "string",
                  "description": "creation date for shipment",
                  "format": "date-time"
                },
                "shipmentUnits": {
                  "type": "integer",
                  "description": "Total number of units in the shipment",
                  "format": "int32"
                },
                "receivedUnits": {
                  "type": "integer",
                  "description": "Total number of units recived in FC for the shipment",
                  "format": "int32"
                },
                "expectedDeliveryDate": {
                  "type": "string",
                  "description": "expected delivery date provided by seller",
                  "format": "date-time"
                },
                "updatedExpectedDeliveryDate": {
                  "type": "string",
                  "description": "update expected delivery date based on network capacity",
                  "format": "date-time"
                },
                "actualDeliveryDate": {
                  "type": "string",
                  "description": "Actual delivery date of the shipment at FC",
                  "format": "date-time"
                },
                "trackingNo": {
                  "type": "array",
                  "description": "Tracking info for the shipment",
                  "items": {
                    "type": "string",
                    "description": "Tracking info for the shipment"
                  }
                },
                "carrierName": {
                  "type": "string",
                  "description": "Carrier of the shipment"
                }
              },
              "description": "response payload"
            }
          }
        }
      },
      "ShipmentPlanDetails": {
        "type": "object",
        "properties": {
          "inboundOrderId": {
            "type": "string",
            "description": "Unique ID identifying inbound shipment request"
          },
          "shipmentId": {
            "type": "string",
            "description": "Unique ID identifying inbound shipment"
          },
          "shipToAddress": {
            "type": "object",
            "properties": {
              "fcName": {
                "type": "string",
                "description": "Facility name"
              },
              "addressLine1": {
                "type": "string",
                "description": "Address details "
              },
              "addressLine2": {
                "type": "string",
                "description": "Address details continuation"
              },
              "city": {
                "type": "string",
                "description": "City name"
              },
              "stateCode": {
                "type": "string",
                "description": "State code"
              },
              "countryCode": {
                "type": "string",
                "description": "Country code"
              },
              "postalCode": {
                "type": "string",
                "description": "Zip code"
              }
            },
            "description": "The address to which sellers need to inbound items"
          },
          "returnAddress": {
            "required": [
              "addressLine1",
              "city",
              "countryCode",
              "postalCode",
              "stateCode"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string",
                "description": "Address details"
              },
              "addressLine2": {
                "type": "string",
                "description": "Address details continuation"
              },
              "city": {
                "type": "string",
                "description": "City name"
              },
              "stateCode": {
                "type": "string",
                "description": "State Code"
              },
              "countryCode": {
                "type": "string",
                "description": "Country code"
              },
              "postalCode": {
                "type": "string",
                "description": "Zip code"
              }
            },
            "description": "Retrun address for seller"
          },
          "status": {
            "type": "string",
            "description": "Current status of the shipment"
          },
          "createdDate": {
            "type": "string",
            "description": "creation date for shipment",
            "format": "date-time"
          },
          "shipmentUnits": {
            "type": "integer",
            "description": "Total number of units in the shipment",
            "format": "int32"
          },
          "receivedUnits": {
            "type": "integer",
            "description": "Total number of units recived in FC for the shipment",
            "format": "int32"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "expected delivery date provided by seller",
            "format": "date-time"
          },
          "updatedExpectedDeliveryDate": {
            "type": "string",
            "description": "update expected delivery date based on network capacity",
            "format": "date-time"
          },
          "actualDeliveryDate": {
            "type": "string",
            "description": "Actual delivery date of the shipment at FC",
            "format": "date-time"
          },
          "trackingNo": {
            "type": "array",
            "description": "Tracking info for the shipment",
            "items": {
              "type": "string",
              "description": "Tracking info for the shipment"
            }
          },
          "carrierName": {
            "type": "string",
            "description": "Carrier of the shipment"
          }
        },
        "description": "response payload"
      },
      "GetShipmentItemsDTO": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "integer",
                "description": "total number of POs for provided GET request.",
                "format": "int32"
              },
              "limit": {
                "type": "integer",
                "description": "provided limit value in the request",
                "format": "int32"
              },
              "offset": {
                "type": "integer",
                "description": "provided offset value in the request.",
                "format": "int32"
              }
            }
          },
          "payload": {
            "type": "array",
            "description": "response payload",
            "items": {
              "type": "object",
              "properties": {
                "inboundOrderId": {
                  "type": "string",
                  "description": "Unique ID identifying inbound shipment request"
                },
                "shipmentId": {
                  "type": "string",
                  "description": "Unique ID identifying each shipment"
                },
                "gtin": {
                  "type": "string",
                  "description": "Item barcode"
                },
                "sku": {
                  "type": "string",
                  "description": "Seller Item ID"
                },
                "itemDesc": {
                  "type": "string",
                  "description": "Item description"
                },
                "itemQty": {
                  "type": "integer",
                  "description": "Total number of sellable units",
                  "format": "int32"
                },
                "vendorPackQty": {
                  "type": "integer",
                  "description": "Total number of cases",
                  "format": "int32"
                },
                "innerPackQty": {
                  "type": "integer",
                  "description": "Total number of sellable units per case",
                  "format": "int32"
                },
                "receivedQty": {
                  "type": "integer",
                  "description": "Qty received in FC",
                  "format": "int32"
                },
                "damagedQty": {
                  "type": "integer",
                  "description": "Qty damaged while receiving in FC",
                  "format": "int32"
                },
                "fillRate": {
                  "type": "number",
                  "description": "Fill rate for this shipment item",
                  "format": "float"
                },
                "expectedDeliveryDate": {
                  "type": "string",
                  "description": "expected delivery date provided by seller",
                  "format": "date-time"
                },
                "updatedExpectedDeliveryDate": {
                  "type": "string",
                  "description": "update expected delivery date based on network capacity",
                  "format": "date-time"
                },
                "shipNodeName": {
                  "type": "string",
                  "description": "FC name"
                }
              },
              "description": "response payload"
            }
          }
        }
      },
      "ShipmentItemDetails": {
        "type": "object",
        "properties": {
          "inboundOrderId": {
            "type": "string",
            "description": "Unique ID identifying inbound shipment request"
          },
          "shipmentId": {
            "type": "string",
            "description": "Unique ID identifying each shipment"
          },
          "gtin": {
            "type": "string",
            "description": "Item barcode"
          },
          "sku": {
            "type": "string",
            "description": "Seller Item ID"
          },
          "itemDesc": {
            "type": "string",
            "description": "Item description"
          },
          "itemQty": {
            "type": "integer",
            "description": "Total number of sellable units",
            "format": "int32"
          },
          "vendorPackQty": {
            "type": "integer",
            "description": "Total number of cases",
            "format": "int32"
          },
          "innerPackQty": {
            "type": "integer",
            "description": "Total number of sellable units per case",
            "format": "int32"
          },
          "receivedQty": {
            "type": "integer",
            "description": "Qty received in FC",
            "format": "int32"
          },
          "damagedQty": {
            "type": "integer",
            "description": "Qty damaged while receiving in FC",
            "format": "int32"
          },
          "fillRate": {
            "type": "number",
            "description": "Fill rate for this shipment item",
            "format": "float"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "expected delivery date provided by seller",
            "format": "date-time"
          },
          "updatedExpectedDeliveryDate": {
            "type": "string",
            "description": "update expected delivery date based on network capacity",
            "format": "date-time"
          },
          "shipNodeName": {
            "type": "string",
            "description": "FC name"
          }
        },
        "description": "response payload"
      },
      "ServiceHeader": {
        "type": "object",
        "properties": {
          "headerAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "xml": {
          "name": "ServiceHeader"
        }
      },
      "ServiceResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "CREATED",
              "ACCEPTED",
              "NO_CONTENT",
              "PARTIAL",
              "MOVED_PERMANENT",
              "FOUND",
              "SEE_OTHER",
              "NOT_MODIFIED",
              "TEMPORARY_REDIRECT",
              "BAD_REQUEST",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_ALLOWED",
              "NOT_ACCEPTABLE",
              "REQUEST_TIMEOUT",
              "CONFLICT",
              "REQUEST_ENTITY_TOO_LARGE",
              "UNSUPPORTED_MEDIA_TYPE",
              "UNPROCESSABLE_ENTITY",
              "FAIL",
              "BAD_GATEWAY",
              "SERVICE_UNAVAILABLE",
              "GATEWAY_TIMEOUT"
            ]
          },
          "header": {
            "type": "object",
            "properties": {
              "headerAttributes": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            },
            "xml": {
              "name": "ServiceHeader"
            }
          },
          "errors": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "string"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ]
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "APPLICATION",
                    "SYSTEM",
                    "REQUEST",
                    "DATA"
                  ]
                },
                "causes": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "xml": {
                      "name": "Cause"
                    }
                  }
                }
              },
              "xml": {
                "name": "Error"
              }
            }
          },
          "payload": {
            "type": "object"
          }
        },
        "xml": {
          "name": "ServiceResponse"
        }
      },
      "InboundShipmentUpdateQtyWrapper": {
        "required": [
          "inboundOrderId",
          "shipmentId"
        ],
        "type": "object",
        "properties": {
          "inboundOrderId": {
            "type": "string",
            "description": "Unique ID identifying inbound shipment request"
          },
          "shipmentId": {
            "type": "string",
            "description": "Unique ID identifying inbound shipment"
          },
          "orderItems": {
            "maxItems": 5000,
            "minItems": 1,
            "type": "array",
            "description": "update shipment qty line items",
            "xml": {
              "wrapped": true
            },
            "items": {
              "required": [
                "sku",
                "updatedShipmentQty"
              ],
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "description": "Seller Item ID"
                },
                "updatedShipmentQty": {
                  "minimum": 0,
                  "type": "integer",
                  "description": "updated quantity",
                  "format": "int32"
                }
              },
              "description": "update shipment qty line items"
            }
          }
        }
      },
      "OrderItemUpdate": {
        "required": [
          "sku",
          "updatedShipmentQty"
        ],
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Seller Item ID"
          },
          "updatedShipmentQty": {
            "minimum": 0,
            "type": "integer",
            "description": "updated quantity",
            "format": "int32"
          }
        },
        "description": "update shipment qty line items"
      },
      "LabelV2RequestWrapper": {
        "required": [
          "shipmentId"
        ],
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string"
          },
          "labelSize": {
            "type": "string"
          },
          "labelFormat": {
            "type": "string"
          },
          "loadTypes": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32"
                },
                "loadType": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "LoadType": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "loadType": {
            "type": "string"
          }
        }
      },
      "TrackingInfoWrapper": {
        "required": [
          "carrierName",
          "shipmentId"
        ],
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          },
          "trackingInfo": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FeedId": {
        "type": "object",
        "properties": {
          "feedId": {
            "type": "string",
            "description": "A unique ID, returned from the Bulk Upload API, used for tracking the feed file"
          },
          "additionalAttributes": {
            "type": "object",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| status | Item status | string",
            "enum": [
              "status"
            ]
          },
          "op": {
            "type": "string",
            "enum": [
              "equals"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PROHIBITED",
                "IN_REVIEW",
                "ACTION_NEEDED"
              ]
            }
          }
        }
      },
      "Query": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| sku | An arbitrary alphanumeric unique ID, seller-specified, identifying each item | string\n| gtin | Specifies a Global Trade Item Number (GTIN) search. GTIN must be 14 digits. | string",
            "enum": [
              "sku",
              "gtin"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| createdAt | when the item is last submitted/updated by Seller | string\n| updatedAt | when the item is last updated by Seller/Walmart | string |",
            "enum": [
              "createdAt",
              "updatedAt"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "WercsFeedbackRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| sku | An arbitrary alphanumeric unique ID, seller-specified, identifying each item | string\n| gtin | Specifies a Global Trade Item Number (GTIN) search. GTIN must be 14 digits. | string",
                "enum": [
                  "sku",
                  "gtin"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| status | Item status | string",
                  "enum": [
                    "status"
                  ]
                },
                "op": {
                  "type": "string",
                  "enum": [
                    "equals"
                  ]
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "PROHIBITED",
                      "IN_REVIEW",
                      "ACTION_NEEDED"
                    ]
                  }
                }
              }
            }
          },
          "sort": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "| Attribute | Description | Data Type\n| --- | ----------- | -------\n| createdAt | when the item is last submitted/updated by Seller | string\n| updatedAt | when the item is last updated by Seller/Walmart | string |",
                "enum": [
                  "createdAt",
                  "updatedAt"
                ]
              },
              "order": {
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ]
              }
            }
          }
        }
      },
      "Carrier": {
        "type": "object",
        "properties": {
          "carrierId": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          }
        }
      },
      "QuoteResponseV2Wrapper": {
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string"
          },
          "shipmentNumber": {
            "type": "string"
          },
          "rateQuotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quoteId": {
                  "type": "string"
                },
                "estimatedDeliveryDateTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "carrier": {
                  "type": "object",
                  "properties": {
                    "carrierId": {
                      "type": "string"
                    },
                    "carrierName": {
                      "type": "string"
                    }
                  }
                },
                "currency": {
                  "type": "string"
                },
                "discountCharge": {
                  "type": "number",
                  "format": "float"
                },
                "netCharge": {
                  "type": "number",
                  "format": "float"
                },
                "surchargeType": {
                  "type": "string"
                },
                "surchargeValue": {
                  "type": "string"
                },
                "totalBillingWeight": {
                  "type": "number",
                  "format": "float"
                },
                "status": {
                  "type": "string"
                },
                "transitDays": {
                  "type": "string"
                },
                "effectiveDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "expiryDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "mode": {
                  "type": "string"
                },
                "sellerFreightClassCode": {
                  "type": "string"
                },
                "freightCharge": {
                  "type": "number",
                  "format": "float"
                },
                "fuelCharge": {
                  "type": "number",
                  "format": "float"
                },
                "totalWeight": {
                  "type": "number",
                  "format": "float"
                },
                "totalVolume": {
                  "type": "number",
                  "format": "float"
                },
                "equipmentTypeCode": {
                  "type": "string"
                },
                "serviceCode": {
                  "type": "string"
                },
                "numberOfPallets": {
                  "type": "integer",
                  "format": "int32"
                },
                "nominalCharge": {
                  "type": "number",
                  "format": "float"
                },
                "assessorialCharge": {
                  "type": "number",
                  "format": "float"
                },
                "serviceCharge": {
                  "type": "number",
                  "format": "float"
                },
                "minimumCharge": {
                  "type": "number",
                  "format": "float"
                },
                "declaredValue": {
                  "type": "string"
                },
                "mixedSKUs": {
                  "type": "integer",
                  "format": "int32"
                },
                "singleSKUs": {
                  "type": "integer",
                  "format": "int32"
                },
                "freightReadyDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "RateQuoteV2": {
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string"
          },
          "estimatedDeliveryDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "carrier": {
            "type": "object",
            "properties": {
              "carrierId": {
                "type": "string"
              },
              "carrierName": {
                "type": "string"
              }
            }
          },
          "currency": {
            "type": "string"
          },
          "discountCharge": {
            "type": "number",
            "format": "float"
          },
          "netCharge": {
            "type": "number",
            "format": "float"
          },
          "surchargeType": {
            "type": "string"
          },
          "surchargeValue": {
            "type": "string"
          },
          "totalBillingWeight": {
            "type": "number",
            "format": "float"
          },
          "status": {
            "type": "string"
          },
          "transitDays": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "mode": {
            "type": "string"
          },
          "sellerFreightClassCode": {
            "type": "string"
          },
          "freightCharge": {
            "type": "number",
            "format": "float"
          },
          "fuelCharge": {
            "type": "number",
            "format": "float"
          },
          "totalWeight": {
            "type": "number",
            "format": "float"
          },
          "totalVolume": {
            "type": "number",
            "format": "float"
          },
          "equipmentTypeCode": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "numberOfPallets": {
            "type": "integer",
            "format": "int32"
          },
          "nominalCharge": {
            "type": "number",
            "format": "float"
          },
          "assessorialCharge": {
            "type": "number",
            "format": "float"
          },
          "serviceCharge": {
            "type": "number",
            "format": "float"
          },
          "minimumCharge": {
            "type": "number",
            "format": "float"
          },
          "declaredValue": {
            "type": "string"
          },
          "mixedSKUs": {
            "type": "integer",
            "format": "int32"
          },
          "singleSKUs": {
            "type": "integer",
            "format": "int32"
          },
          "freightReadyDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Address": {
        "required": [
          "addressLine1",
          "city",
          "countryCode",
          "postalCode",
          "stateCode"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "CarrierQuoteRequestV2Wrapper": {
        "required": [
          "customer",
          "destinationLocation",
          "mode",
          "originLocation",
          "returnLocation",
          "shipmentId",
          "shipmentPackages",
          "shipmentSource"
        ],
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string"
          },
          "shipmentSource": {
            "type": "string"
          },
          "pickupFromDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "pickupToDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryFromDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryToDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "required": [
              "customerId",
              "customerName"
            ],
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string"
              },
              "customerName": {
                "type": "string"
              }
            }
          },
          "originLocation": {
            "required": [
              "address",
              "locationName"
            ],
            "type": "object",
            "properties": {
              "locationName": {
                "type": "string"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "city",
                  "countryCode",
                  "postalCode",
                  "stateCode"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "locationId": {
                "type": "string"
              }
            }
          },
          "destinationLocation": {
            "required": [
              "address",
              "locationName"
            ],
            "type": "object",
            "properties": {
              "locationName": {
                "type": "string"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "city",
                  "countryCode",
                  "postalCode",
                  "stateCode"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "locationId": {
                "type": "string"
              }
            }
          },
          "returnLocation": {
            "required": [
              "address",
              "locationName"
            ],
            "type": "object",
            "properties": {
              "locationName": {
                "type": "string"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "city",
                  "countryCode",
                  "postalCode",
                  "stateCode"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "shipmentPackages": {
            "maxItems": 5000,
            "minItems": 1,
            "type": "array",
            "items": {
              "required": [
                "height",
                "length",
                "lengthUOM",
                "packageSequenceNumber",
                "weight",
                "weightUOM",
                "width"
              ],
              "type": "object",
              "properties": {
                "packageSequenceNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "weight": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "weightUOM": {
                  "type": "string"
                },
                "length": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "height": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "width": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "lengthUOM": {
                  "type": "string"
                },
                "labelInformation": {
                  "type": "object",
                  "properties": {
                    "labelData": {
                      "type": "string"
                    },
                    "labelFormat": {
                      "type": "string"
                    },
                    "trackingCode": {
                      "type": "string"
                    },
                    "referenceTrackingCode": {
                      "type": "string"
                    },
                    "epTrackerId": {
                      "type": "string"
                    },
                    "shipmentId": {
                      "type": "string"
                    },
                    "packageAsn": {
                      "type": "string"
                    },
                    "masterTrackingCode": {
                      "type": "string"
                    },
                    "master": {
                      "type": "boolean"
                    }
                  }
                },
                "billingWeight": {
                  "type": "number",
                  "format": "float"
                },
                "netCharge": {
                  "type": "number",
                  "format": "float"
                },
                "nominalCharge": {
                  "type": "number",
                  "format": "float"
                },
                "assessorialCharge": {
                  "type": "number",
                  "format": "float"
                },
                "serviceCharge": {
                  "type": "number",
                  "format": "float"
                },
                "packageType": {
                  "type": "string"
                },
                "noOfPackages": {
                  "type": "integer",
                  "format": "int32"
                },
                "stackable": {
                  "type": "boolean"
                }
              }
            }
          },
          "mode": {
            "type": "string",
            "default": "PARCEL"
          },
          "freightClass": {
            "type": "string"
          },
          "declaredValue": {
            "type": "integer",
            "format": "int32"
          },
          "loadTypes": {
            "type": "array",
            "items": {
              "required": [
                "count",
                "loadType"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "string"
                },
                "loadType": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Customer": {
        "required": [
          "customerId",
          "customerName"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          }
        }
      },
      "DestinationLocation": {
        "required": [
          "address",
          "locationName"
        ],
        "type": "object",
        "properties": {
          "locationName": {
            "type": "string"
          },
          "address": {
            "required": [
              "addressLine1",
              "city",
              "countryCode",
              "postalCode",
              "stateCode"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "stateCode": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "locationId": {
            "type": "string"
          }
        }
      },
      "LabelInformation": {
        "type": "object",
        "properties": {
          "labelData": {
            "type": "string"
          },
          "labelFormat": {
            "type": "string"
          },
          "trackingCode": {
            "type": "string"
          },
          "referenceTrackingCode": {
            "type": "string"
          },
          "epTrackerId": {
            "type": "string"
          },
          "shipmentId": {
            "type": "string"
          },
          "packageAsn": {
            "type": "string"
          },
          "masterTrackingCode": {
            "type": "string"
          },
          "master": {
            "type": "boolean"
          }
        }
      },
      "LoadTypeDetails": {
        "required": [
          "count",
          "loadType"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "string"
          },
          "loadType": {
            "type": "string"
          }
        }
      },
      "OriginLocation": {
        "required": [
          "address",
          "locationName"
        ],
        "type": "object",
        "properties": {
          "locationName": {
            "type": "string"
          },
          "address": {
            "required": [
              "addressLine1",
              "city",
              "countryCode",
              "postalCode",
              "stateCode"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "stateCode": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "locationId": {
            "type": "string"
          }
        }
      },
      "ReturnLocation": {
        "required": [
          "address",
          "locationName"
        ],
        "type": "object",
        "properties": {
          "locationName": {
            "type": "string"
          },
          "address": {
            "required": [
              "addressLine1",
              "city",
              "countryCode",
              "postalCode",
              "stateCode"
            ],
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "stateCode": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        }
      },
      "ShipmentPackage": {
        "required": [
          "height",
          "length",
          "lengthUOM",
          "packageSequenceNumber",
          "weight",
          "weightUOM",
          "width"
        ],
        "type": "object",
        "properties": {
          "packageSequenceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "minimum": -1,
            "type": "number",
            "format": "float"
          },
          "weightUOM": {
            "type": "string"
          },
          "length": {
            "minimum": -1,
            "type": "number",
            "format": "float"
          },
          "height": {
            "minimum": -1,
            "type": "number",
            "format": "float"
          },
          "width": {
            "minimum": -1,
            "type": "number",
            "format": "float"
          },
          "lengthUOM": {
            "type": "string"
          },
          "labelInformation": {
            "type": "object",
            "properties": {
              "labelData": {
                "type": "string"
              },
              "labelFormat": {
                "type": "string"
              },
              "trackingCode": {
                "type": "string"
              },
              "referenceTrackingCode": {
                "type": "string"
              },
              "epTrackerId": {
                "type": "string"
              },
              "shipmentId": {
                "type": "string"
              },
              "packageAsn": {
                "type": "string"
              },
              "masterTrackingCode": {
                "type": "string"
              },
              "master": {
                "type": "boolean"
              }
            }
          },
          "billingWeight": {
            "type": "number",
            "format": "float"
          },
          "netCharge": {
            "type": "number",
            "format": "float"
          },
          "nominalCharge": {
            "type": "number",
            "format": "float"
          },
          "assessorialCharge": {
            "type": "number",
            "format": "float"
          },
          "serviceCharge": {
            "type": "number",
            "format": "float"
          },
          "packageType": {
            "type": "string"
          },
          "noOfPackages": {
            "type": "integer",
            "format": "int32"
          },
          "stackable": {
            "type": "boolean"
          }
        }
      },
      "CarrierQuoteConfirmRequestWrapper": {
        "required": [
          "shipmentId"
        ],
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string"
          }
        }
      },
      "GetRateQuoteInfoResponseWrapper": {
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string"
          },
          "quoteId": {
            "type": "string"
          },
          "estimatedDeliveryDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "quoteCreationDate": {
            "type": "string",
            "format": "date-time"
          },
          "carrier": {
            "type": "object",
            "properties": {
              "carrierId": {
                "type": "string"
              },
              "carrierName": {
                "type": "string"
              }
            }
          },
          "rateQuote": {
            "type": "object",
            "properties": {
              "quoteId": {
                "type": "string"
              },
              "estimatedDeliveryDateTime": {
                "type": "string",
                "format": "date-time"
              },
              "carrier": {
                "type": "object",
                "properties": {
                  "carrierId": {
                    "type": "string"
                  },
                  "carrierName": {
                    "type": "string"
                  }
                }
              },
              "currency": {
                "type": "string"
              },
              "discountCharge": {
                "type": "number",
                "format": "float"
              },
              "netCharge": {
                "type": "number",
                "format": "float"
              },
              "surchargeType": {
                "type": "string"
              },
              "surchargeValue": {
                "type": "string"
              },
              "totalBillingWeight": {
                "type": "number",
                "format": "float"
              },
              "status": {
                "type": "string"
              },
              "transitDays": {
                "type": "string"
              },
              "effectiveDate": {
                "type": "string",
                "format": "date-time"
              },
              "expiryDate": {
                "type": "string",
                "format": "date-time"
              },
              "mode": {
                "type": "string"
              },
              "sellerFreightClassCode": {
                "type": "string"
              },
              "freightCharge": {
                "type": "number",
                "format": "float"
              },
              "fuelCharge": {
                "type": "number",
                "format": "float"
              },
              "totalWeight": {
                "type": "number",
                "format": "float"
              },
              "totalVolume": {
                "type": "number",
                "format": "float"
              },
              "equipmentTypeCode": {
                "type": "string"
              },
              "serviceCode": {
                "type": "string"
              },
              "numberOfPallets": {
                "type": "integer",
                "format": "int32"
              },
              "nominalCharge": {
                "type": "number",
                "format": "float"
              },
              "assessorialCharge": {
                "type": "number",
                "format": "float"
              },
              "serviceCharge": {
                "type": "number",
                "format": "float"
              },
              "minimumCharge": {
                "type": "number",
                "format": "float"
              },
              "declaredValue": {
                "type": "string"
              },
              "mixedSKUs": {
                "type": "integer",
                "format": "int32"
              },
              "singleSKUs": {
                "type": "integer",
                "format": "int32"
              },
              "freightReadyDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "shipmentPackages": {
            "type": "array",
            "items": {
              "required": [
                "height",
                "length",
                "lengthUOM",
                "packageSequenceNumber",
                "weight",
                "weightUOM",
                "width"
              ],
              "type": "object",
              "properties": {
                "packageSequenceNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "weight": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "weightUOM": {
                  "type": "string"
                },
                "length": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "height": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "width": {
                  "minimum": -1,
                  "type": "number",
                  "format": "float"
                },
                "lengthUOM": {
                  "type": "string"
                },
                "labelInformation": {
                  "type": "object",
                  "properties": {
                    "labelData": {
                      "type": "string"
                    },
                    "labelFormat": {
                      "type": "string"
                    },
                    "trackingCode": {
                      "type": "string"
                    },
                    "referenceTrackingCode": {
                      "type": "string"
                    },
                    "epTrackerId": {
                      "type": "string"
                    },
                    "shipmentId": {
                      "type": "string"
                    },
                    "packageAsn": {
                      "type": "string"
                    },
                    "masterTrackingCode": {
                      "type": "string"
                    },
                    "master": {
                      "type": "boolean"
                    }
                  }
                },
                "billingWeight": {
                  "type": "number",
                  "format": "float"
                },
                "netCharge": {
                  "type": "number",
                  "format": "float"
                },
                "nominalCharge": {
                  "type": "number",
                  "format": "float"
                },
                "assessorialCharge": {
                  "type": "number",
                  "format": "float"
                },
                "serviceCharge": {
                  "type": "number",
                  "format": "float"
                },
                "packageType": {
                  "type": "string"
                },
                "noOfPackages": {
                  "type": "integer",
                  "format": "int32"
                },
                "stackable": {
                  "type": "boolean"
                }
              }
            }
          },
          "originLocation": {
            "required": [
              "address",
              "locationName"
            ],
            "type": "object",
            "properties": {
              "locationName": {
                "type": "string"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "city",
                  "countryCode",
                  "postalCode",
                  "stateCode"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "locationId": {
                "type": "string"
              }
            }
          },
          "destinationLocation": {
            "required": [
              "address",
              "locationName"
            ],
            "type": "object",
            "properties": {
              "locationName": {
                "type": "string"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "city",
                  "countryCode",
                  "postalCode",
                  "stateCode"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "locationId": {
                "type": "string"
              }
            }
          },
          "returnLocation": {
            "required": [
              "address",
              "locationName"
            ],
            "type": "object",
            "properties": {
              "locationName": {
                "type": "string"
              },
              "address": {
                "required": [
                  "addressLine1",
                  "city",
                  "countryCode",
                  "postalCode",
                  "stateCode"
                ],
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "CarrierLabelRequestWrapper": {
        "required": [
          "shipDate"
        ],
        "type": "object",
        "properties": {
          "shipDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Basic authorization header. Base 64 encodes the Client ID and Client Secret retrieved in step two of the integration steps.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Basic YzcyOTFjNmItNzI5MC00...."
      },
      "accessToken": {
        "name": "WM_SEC.ACCESS_TOKEN",
        "in": "header",
        "description": "The access token retrieved in the Token API call",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM....."
      },
      "channelType": {
        "name": "WM_CONSUMER.CHANNEL.TYPE",
        "in": "header",
        "description": "A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "correlationId": {
        "name": "WM_QOS.CORRELATION_ID",
        "in": "header",
        "description": "A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "b3261d2d-028a-4ef7-8602-633c23200af6"
      },
      "svcName": {
        "name": "WM_SVC.NAME",
        "in": "header",
        "description": "Walmart Service Name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "Walmart Service Name"
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Only supported Media Type : application/json",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "application/json"
      }
    },
    "securitySchemes": {
      "basicScheme": {
        "type": "http",
        "description": "",
        "name": "Authorization",
        "in": "header",
        "scheme": "basic"
      }
    }
  }
}